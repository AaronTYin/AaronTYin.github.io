<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Meng Ze</title>
  
  <subtitle>This is a world of dream.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://mengze.top/"/>
  <updated>2020-07-24T13:50:31.082Z</updated>
  <id>https://mengze.top/</id>
  
  <author>
    <name>梦泽</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AboutMe</title>
    <link href="https://mengze.top/AboutMe/"/>
    <id>https://mengze.top/AboutMe/</id>
    <published>2026-02-01T16:00:00.000Z</published>
    <updated>2020-07-24T13:50:31.082Z</updated>
    
    <content type="html"><![CDATA[<p>　　梦泽，仍然为梦而拼尽全力的90后，喜欢音乐喜欢设计喜欢影视喜欢一切的自然科学，永远对未知充满着无限的兴趣，总是相信“可能”在所有梦想的大门后边秉烛待旦。</p><p>　　在少年热血未尽之时，执鞭策马追逐天边的绮霞…</p><ul><li>QQ/TIM:3042967185</li><li>Weixin:AaronTempletonYin</li><li>Mail:mengzeaty@foxmail.com</li><li>公众号:MengZeATY</li><li>Weibo:<a href="https://weibo.com/MengZeATY" target="_blank" rel="external">MengZeATY</a></li><li>Bilibili:<a href="https://space.bilibili.com/270805824/#/" target="_blank" rel="external">MengZeATY</a></li><li>Github:<a href="https://github.com/AaronTYin" target="_blank" rel="external">AaronTYin</a></li><li>网易云音乐:<a href="http://music.163.com/m/user/home?id=1306028035" target="_blank" rel="external">MengZeATY</a></li><li>知乎:<a href="https://www.zhihu.com/people/df0d8601894261c903f8f4eaf7e8c0ea" target="_blank" rel="external">MengZeATY</a></li><li>CSDN:<a href="https://blog.csdn.net/qq_16162579" target="_blank" rel="external">MengZeATY</a></li><li>豆瓣:<a href="https://www.douban.com/people/171111273/" target="_blank" rel="external">MengZeATY</a></li><li>简书:<a href="https://www.jianshu.com/u/6735156f271c" target="_blank" rel="external">MengZeATY</a></li><li>POCO:<a href="https://www.poco.cn/user/id201304285" target="_blank" rel="external">MengZeATY</a></li><li>美图秀秀:<a href="https://show.meitu.com/personal?uid=1052479734&amp;root_id=1052479734&amp;lang=cn" target="_blank" rel="external">MengZeATY</a></li></ul><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">O:Object 项目</div><div class="line">C:Class 课程知识点备份</div><div class="line">K:Knowledge 基础知识</div><div class="line">L:Language 语言积累</div><div class="line">E:Essay 随笔短文</div><div class="line">ME:Movie Essay 影评观后感</div><div class="line">S:Site 站内页面</div></pre></td></tr></table></figure><blockquote><ul><li><a href="https://mengze.top/tags/嵌入式">嵌入式</a></li><li><a href="https://mengze.top/tags/FPGA">FPGA</a></li><li><a href="https://mengze.top/tags/信息技术">信息技术</a></li><li><a href="https://mengze.top/tags/人工智能">人工智能</a></li><li><a href="https://mengze.top/tags/编程算法">编程算法</a></li><li><a href="https://mengze.top/tags/Web开发">Web开发</a></li><li><a href="https://mengze.top/tags/图影设计">图影设计</a></li><li><a href="https://mengze.top/tags/书影感评">书影感评</a></li><li><a href="https://mengze.top/tags/随笔短文">随笔短文</a></li><li><a href="https://mengze.top/tags/语言积累">语言积累</a></li><li><a href="https://mengze.top/tags/自然科学">自然科学</a></li><li><a href="https://mengze.top/tags/生物医学">生物医学</a></li><li><a href="https://mengze.top/tags/经济管理">经济管理</a></li></ul><hr><ul><li><a href="https://mengze.top/tags/站内页面">站内页面</a></li></ul></blockquote><!--- SinaBlog:[Aaron-MXY](http://blog.sina.com.cn/u/6148427895)- 优酷:[MengZeATY](http://i.youku.com/mengzetop)- 土豆:[MengZeATY](http://id.tudou.com/mengzetop)--><hr>]]></content>
    
    <summary type="html">
    
      About Me
    
    </summary>
    
    
    
      <category term="站内页面" scheme="https://mengze.top/tags/%E7%AB%99%E5%86%85%E9%A1%B5%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>【S】MZ-ATY泛内容联合声明</title>
    <link href="https://mengze.top/MZ-ATY_VCJS/"/>
    <id>https://mengze.top/MZ-ATY_VCJS/</id>
    <published>2026-01-31T16:00:00.000Z</published>
    <updated>2020-07-24T12:44:31.303Z</updated>
    
    <content type="html"><![CDATA[<h4 id="MZ-ATY-VCJS-1-0（当前生效）"><a href="#MZ-ATY-VCJS-1-0（当前生效）" class="headerlink" title="MZ-ATY VCJS 1.0（当前生效）"></a>MZ-ATY VCJS 1.0（当前生效）</h4><p><div style="text-align:center;">MZ-ATY泛内容联合声明</div><nobr></nobr></p><p><div style="text-align:center;">MZ-ATY Various Contents Joint Statement</div><nobr></nobr></p><p><div style="text-align:center;">(MZ-ATY VCJS 1.0)</div><br></p><p>　　本声明适用于泛内容，包括但不限于以电子/实体存在的音、影、图、文及设计的程序、图纸、文件等内容。<br>　　凡遵循此声明的泛内容，允许他人进行标明范围内的活动，任何对遵循此声明的泛内容的传播、修改者，均保证不将相关内容进行商业活动，违反此声明者将自行承担相应的法律责任。<br>　　凡遵循此声明的泛内容产生传播、修改活动时，相关人员将自动被认为了解并同意此声明的所有内容。</p><p>　　标明活动：可传播/可修改。<br>　　未标明则可在此声明约束内进行传播与修改。</p><ul><li>声明人：</li><li>梦泽/MengZe(MZ)</li><li>媒体社交账号-MengZeATY</li><li>AaronTempletonYin(ATY)</li></ul><hr><p>　　This statement is applicable to the Various Contents, including but not limited to audio, video, graphics, text and designed procedures, drawings, documents and other contents in electronic/physical form.<br>　　Any Various Contents which complies with this statement allows others to carry out activities within the scope indicated, any person who disseminates or modifies that Various Contents which compliance with this statement shall guarantee that he/she will not conduct commercial activities in relation to the relevant contents, and any person who violates this statement shall bear corresponding legal liabilities by himself/herself.<br>　　When a propagation or modification activity is carried out to comply with the Various Contents which complies with this statement, the person concerned will automatically be deemed to know and agree to all the contents of this statement.</p><p>　　Indicate activities: propagable/modifiable.<br>　　If not indicate, the relevant contents can be propagated and modified within this declaration constraint.</p><ul><li>Declarant:</li><li>梦泽/MengZe(MZ)</li><li>Social media accounts-MengZeATY</li><li>AaronTempletonYin(ATY)</li></ul><hr><a id="more"></a><p><img src="/sourcefile/MZ-ATY_VCJS/MAVCJS.png" alt="MZ-ATY泛内容联合声明.png"></p><h4 id="MZ-ATY-VCJS-2-0"><a href="#MZ-ATY-VCJS-2-0" class="headerlink" title="MZ-ATY VCJS 2.0"></a>MZ-ATY VCJS 2.0</h4><blockquote><p>更新中…</p></blockquote>]]></content>
    
    <summary type="html">
    
      MZ-ATY泛内容联合声明
    
    </summary>
    
    
    
      <category term="站内页面" scheme="https://mengze.top/tags/%E7%AB%99%E5%86%85%E9%A1%B5%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>【MV】【音乐向/GMV】生活不止眼前的苟且，还有一眼望不到尽头的孤独.....</title>
    <link href="https://mengze.top/[MV]AbandonShip_%E6%B7%B1%E6%B5%B7%E8%BF%B7%E8%88%AA+%E9%9B%B6%E5%BA%A6%E4%B9%8B%E4%B8%8BCG%E6%B7%B7%E5%89%AA/"/>
    <id>https://mengze.top/[MV]AbandonShip_%E6%B7%B1%E6%B5%B7%E8%BF%B7%E8%88%AA+%E9%9B%B6%E5%BA%A6%E4%B9%8B%E4%B8%8BCG%E6%B7%B7%E5%89%AA/</id>
    <published>2020-03-03T16:00:00.000Z</published>
    <updated>2020-07-26T04:18:46.519Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-GMV】生活不止眼前的苟且，还有一眼望不到尽头的孤独…"><a href="#【音乐向-GMV】生活不止眼前的苟且，还有一眼望不到尽头的孤独…" class="headerlink" title="【音乐向/GMV】生活不止眼前的苟且，还有一眼望不到尽头的孤独….."></a>【音乐向/GMV】生活不止眼前的苟且，还有一眼望不到尽头的孤独…..</h2><blockquote><p>音乐：Simon Chylinski -《Abandon Ship》+《Salutations》混缩</p></blockquote><p><a href="https://www.bilibili.com/video/BV1ZE411x77b" target="_blank"><img src="/sourcefile/[MV]AbandonShip_深海迷航+零度之下CG混剪/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1ZE411x77b" target="_blank" rel="external">Bilibili：BV1ZE411x77b</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      AbandonShip_深海迷航+零度之下CG混剪
    
    </summary>
    
    
    
      <category term="图影设计" scheme="https://mengze.top/tags/%E5%9B%BE%E5%BD%B1%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>【MV】【音乐向/福利向】祝天下所有共赏秋月的朋友，中秋节快乐！</title>
    <link href="https://mengze.top/[MV]%E5%8D%83%E9%87%8C%E9%82%80%E6%9C%88_%E4%BA%BA%E5%A3%B0%E6%9C%AC%E5%AE%B6_%E7%A6%8F%E5%88%A9%E6%B7%B7%E5%89%AA/"/>
    <id>https://mengze.top/[MV]%E5%8D%83%E9%87%8C%E9%82%80%E6%9C%88_%E4%BA%BA%E5%A3%B0%E6%9C%AC%E5%AE%B6_%E7%A6%8F%E5%88%A9%E6%B7%B7%E5%89%AA/</id>
    <published>2019-09-12T16:00:00.000Z</published>
    <updated>2020-07-26T04:16:20.009Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-福利向】祝天下所有共赏秋月的朋友，中秋节快乐！"><a href="#【音乐向-福利向】祝天下所有共赏秋月的朋友，中秋节快乐！" class="headerlink" title="【音乐向/福利向】祝天下所有共赏秋月的朋友，中秋节快乐！"></a>【音乐向/福利向】祝天下所有共赏秋月的朋友，中秋节快乐！</h2><blockquote><p>音乐：泠鸢yousa / 茶理理 / Hanser / 三无MarBlue - 《千里邀月（人声本家）》</p></blockquote><p><a href="https://www.bilibili.com/video/BV13J411N79x" target="_blank"><img src="/sourcefile/[MV]千里邀月_人声本家_福利混剪/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV13J411N79x" target="_blank" rel="external">Bilibili：BV13J411N79x</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      千里邀月_人声本家_福利混剪
    
    </summary>
    
    
    
      <category term="图影设计" scheme="https://mengze.top/tags/%E5%9B%BE%E5%BD%B1%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>【ME】十日游戏观感</title>
    <link href="https://mengze.top/[ME]%E5%8D%81%E6%97%A5%E6%B8%B8%E6%88%8F%E8%A7%82%E6%84%9F/"/>
    <id>https://mengze.top/[ME]%E5%8D%81%E6%97%A5%E6%B8%B8%E6%88%8F%E8%A7%82%E6%84%9F/</id>
    <published>2019-06-24T16:00:00.000Z</published>
    <updated>2020-07-26T04:22:20.230Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-爱情】若厌倦晴空，就去爱暴风雨。"><a href="#【音乐向-爱情】若厌倦晴空，就去爱暴风雨。" class="headerlink" title="【音乐向/爱情】若厌倦晴空，就去爱暴风雨。"></a>【音乐向/爱情】若厌倦晴空，就去爱暴风雨。</h2><blockquote><p>音乐：许艺娜 -《感情游戏》</p></blockquote><p><a href="https://www.bilibili.com/video/BV1NC4y1h7Mg" target="_blank"><img src="/sourcefile/[ME]十日游戏观感/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1NC4y1h7Mg" target="_blank" rel="external">Bilibili：BV1NC4y1h7Mg</a></li></ul></blockquote><h2 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h2><p>　　本文涉及大量剧透，阅读请慎重。</p><h2 id="一刷"><a href="#一刷" class="headerlink" title="一刷"></a>一刷</h2><p>　　如果说2020年唯一一件可以说满足到无憾的事，那就是知道了十日游戏，顺顺畅畅的看过了十日游戏，然后在一片黑暗中细细回味那些美轮美奂的细节和这整个荒谬却又美好到无与伦比的故事。</p><p>　　2020年作为难得的片荒年，能有一两部能看的电影就已经相当欣慰了，当初看片片（小片片说大片）介绍这部剧时也只是抱着一种吃瓜的心态来看的，但还是在知道前七集梗概的前提下看着两人紧张中透着甜的剧情不亦乐乎。</p><p>　　首先说下当时自己都觉得不怎么合理的推断是那个叫……ennn，忘了叫啥百度也没搜到的另一个主管这个案件的警官，总是在潜意识里感觉是他杀的人，做这种推断的原因完全是凭借我多年的观影经验来默认认为一部影视剧中每个人物哪怕是再不起眼配角都要对剧情有一定的作用（然而即使看完结局我也没太明白他到底起了什么作用）。</p><p>　　另一种相对靠谱的推断是沈辉为了心疼那四百万不惜将女儿杀害从而嫁祸于海让警察把钱找回来，我也不知道当时自己为什么会那么想，可能在公司苦逼加班的我对四百万人民币的评估能力还是差了那么一点，于是在看第八集的时候我的心里几乎全程都是“woc这是什么鬼，woc这又是什么鬼”的自我对话。</p><p>　　说到这里不得不提一句，看前七集的过程中心底一直都希望着路婕/沈芸能够活过来（或者说活着），虽说这是一部再现实不过的非魔幻奇幻剧。在我看来比较能被大众接受的结局是男主女主要么一起活着要么一起死，独活这种结局是真的虐心……所以在第八集看到沈芸活着时我的内心是几乎雀跃的，虽说还不明白为啥她活着……</p><p>　　八集之后呢真相就一点一点浮出水面了，虽说过程比较坎坷曲折，但总归还是看明白了，其实看到第十集就基本了解所有真相了，看大结局的时候有几次没忍住差点划走退出，最后还是在凌晨两点坚持看到了最后一集演员表的出现。看完彩蛋之后，我不由自主的笑了，从心底就自然而然就笑了出来，仿佛发现了这个世界的真相一般心情瞬间飞跃到了一种前所未有的舒畅感，然后就睡意全无，原来这个世界上还有这么令人满足的剧作，原来一个故事可以带给人这么飘柔的心境，如果自己能创作出一部这样的作品，此生真的可谓死而无憾了。</p><p>　　如果把看一部影视剧比做对一个人的了解过程的话，十日游戏给我的第一印象可以算得上是巅峰了，以一种欣赏的角度去观看这部剧，可以看出它里面有不少堪比电影级别的镜头和调色，在不经意间切换了观众对这部剧的整体感官。就整体故事而言，虽说其中有些情节会给人一种多此一举的感觉，但总体上作为一部电视剧来说，十日游戏可以算得上很紧凑了，在某些地方可以做下删减可能会更好些。</p><p>　　就角色塑造这方面，不得不说刘奕君所演绎的沈辉前前后后让我对他的看法无数次反转，一开始是带着一种对无情资本家的厌恶，只认钱不认情的吸血蝙蝠，还对他人的劳动成果无情的践踏，根本没有道德可言；后来又觉得假惺惺太虚伪，一个自己根本不关心的女儿被绑了却表现出这种悲痛欲绝的姿态又是做给谁看？虽说交钱的时候表现的那么真实吧。再之后看到他和沈芸在酒吧见面还混过黑道，本人双眼一眯，此人极其危险！再往下看呢……WhatF？导演你在搞我心态？好吧，先给沈大大磕个头，原谅我曾经对你的那些猜疑和贬低。当然最重要的是看到结局时，差点泪崩，无话可说。这么一个角色的塑造虽算不上玛利亚海沟到珠穆朗玛峰的飞升，但也算得上长江三角洲到青藏高原的高反转性变化了，所以沈辉是这部剧给我留下最深印象的人物，不可否认。（不过他在交钱的时候那种悲痛的表现确实是装出来的……）</p><p>　　对于于海这个人物，前后感觉上会有一点点的脱节，转折点应该就是确认实施绑架之后到发现被骗之前这段区间内（至于具体在什么地方没看出来，等待二刷），给人的感觉就是在一瞬间他的技能点开了挂似的点满了，当然前后人物明显的差异也加体现出了朱亚文对这个角色的掌控，前有钢铁直男面对桃花柳絮铺面袭来的羞涩和暖化，后有在盛怒和心凉的压迫下面对难舍情感的冷漠与不甘。</p><p>　　其实来看这部剧完全是奔着发糖才来看的，因为片片只讲了绑架线的前七集，这不就是赤裸裸的虐狗剧嘛，正和我口味，所以看完整部剧期间，我不止一次的被这种情节的反转吓到了，对，是吓到了，可能我看过的悬疑剧不多的缘故吧，第一次知道原来一个故事还能反转成这个样子，不得不佩服东野圭吾和导演编剧的能力。本来打算去看一下绑架游戏的，不过看到网上说太悲伤就先搁置吧，怕反转了现在对这部剧的看法和心情。</p><h2 id="二刷"><a href="#二刷" class="headerlink" title="二刷"></a>二刷</h2><p>　　（二刷一般会顺便剪视频，所以某些地方会重复看，看的会更仔细些，说的也会啰嗦一点，还望各位不要烦哈。）</p><p>　　看过了豆瓣上的各路影评，在经过漫长的思虑后终于明白为什么这部剧能带给我这种奇特的无与伦比的感受：因为它的甜。说实话，之前在学网文的时候还是挺反感那种为了取悦读者而创作出的故事，可如今看来这就是现实，哪怕我自己也会更喜欢这种能让人开心欣慰，最重要的是能舒缓压力的作品。所以如果拿十日游戏的逻辑框架与同期的电影比如绅士们、利刃出鞘等这种剧作来对比的话确实还是挺符合豆瓣7分的分数的，可如果给我一个选择：8.3分好评如潮的三叉戟和7.7分有不少低评的十日游戏，那在了解到剧情或看过预告片之后的我肯定还是会选择十日游戏，不为别的，就因为它的甜是令人开心的令人放松的。</p><p>　　其实曾经很不屑那个观点的我如今不得不重新审视起这个现象：尽心尽力做的剪辑或短片播放量远远不如那些娱乐型的视频。在如今这个节奏越来越快的社会里，能够真正静下心来用心去体会艺术和文化内涵的人越来越少，更多的人只是想在忙碌之余的闲暇时间去放松一下自己的心情。每个人的时间都是有限的，尤其是在今天的社会大节奏下，能够决定消耗自己宝贵的时间去看一部影视剧就已经在潜意识里产生了对这部剧的第一次肯定，至少我是这样的观众和读者。就我自己而言，这确实是一种不错的观赏影视剧的方法，就像自己生的孩子自己养一样，当决定要看一部影视剧时，就直接带着一种欣赏的滤镜去看完整部作品，然后在看完后慢慢回味其中的细节，看一下别人大家对它的看法，补充自己对这部影视剧的认知。（当然确实有些影视剧可能带着多强滤镜都看不下去的，不过毕竟是少数）</p><p>　　总之，我也看过不少不值得评价的剧，对于一个演员究竟演的好不好还是能看的出来的。而且根据那些评论的质量，暂且把他们当做水军吧。我在看这部剧的时候除了田鹏饰演者倪大红看起来有点脸熟之外，其他人一概没见过，所以自我感觉对这些演员的评价还算是客观的，对于金晨呢，虽然有些细节上的不足使得她还达不到老戏骨的水平，但说她演的烂确实就很过了，感觉能比鞠婧祎好一些。（虽然是鞠总两年的粉丝，但也要实话实说不是？当然这里不是说鞠总演的就烂了，只不过单纯的拿两个人作下相对的比较罢了。最近较忙，对比也是和芸汐传/游泳先生时的鞠总对比的。鞠总加油！）</p><p>　　二刷第一集，确实，如果不知道后续的话还是有那么一点几率会被劝退的，剧情有些枯燥，情节有些老套，而且感觉是一开始都没完全入戏还是咋地，仔细看的话会发现这一集部分演员的表现没有后边那么自然。不过第一集透露了一些伏笔，比如沈芸吃串串时进厕所，于海晚上睡不着觉进卧室，第二天沈芸不经意的叠衣服手法，确实还不少细节，而且吃串串时沈芸以路婕的身份说那一大段话以及晚上在于海家说他们都是法西斯所流露出的那种悲伤真的很好的把观众带到了剧情的节奏里，沈辉去警局认领时自始至终都没露出死者的脸，这些地方都还是能加分的细节。至于前边大半段为了说清故事而有的探案情节略显枯燥，有一定的劝退风险，个人感觉不如放到稍后的几集的恰当的位置再展开这条线，可能会有更出乎意料的效果。</p><p>　　看到第二集快结束的时候一直在思考一个问题，在已经知道结局的情况下看沈芸以路婕的身份说着自己的故事，其实就是一种变相的一遍又一遍回味自己杀人的过程，话说现实中真的会有人能做到这一点吗？或者说真的愿意做到这一点吗？为了逃避罪责而不断的承受着内心的冲击，虽然就当时的剧情来说导演为了误导观众而以此来推动主线发展，不过仔细想想总会觉得不太现实。而且如果是一口气看完这部剧的话，会很清晰的感觉出来沈芸在八集前后根本就像是两个人，真的很难去用沈芸原有的性格去看待她所装出来的那种自然到露骨的另一种本性的表现。说的严格一点就是有点突兀，两种性格给人的感觉就是在现实中不存在的一种不真实感。</p><p>　　在网易云偶然间看到评论说剧中几条不同的感情线，父女情，恩仇情，兄弟情，爱情。看完两遍，个人感觉探案线整体都太冗杂了，而且主要是删减一些也不会对其他几条感情线有太大的影响。就拿抓路婕男朋友那段，对整体剧情并没有太大的作用，如果说用这段来引出吴宇柯与另一个警官之间的关系，可……另一个警官的存在好像也没有啥作用……所以说整个探案线的剧情可以压缩到很短，分清主线副线的戏份分配，让探案线作为主线的一种辅助推动，然后再用上现在这种双线杂叙地手法，应该会更好一些。这样的话整部剧可以压缩到三到五个小时，分个电影上下部就足够了。</p><p>　　即使是二刷，依然觉得沈辉表现的太有迷惑性了，很容易让观众认为他是真正的反派，哪怕是他给三弟钱看病都以为是装出来的同情，而他调查的那个人基本上都会认为是于海，毕竟田鹏前期出现的有点少，很难联系到他那儿去。沈辉为了赎罪，给了沈芸更多的爱，在沈芸无意害死自己的亲生女儿后，依然把最纯粹最真挚也最不择手段不惜一切的爱全都给了沈芸。自己犯下的罪过，终究还是逃不脱命运的责罚。“牺牲是对忏悔者的成全，正义会以想象不到的方式彰显，但永远不会缺席。”可惜在沈辉死前，依旧以为沈芸已经自杀了，那个为自己的曾经赎罪的孩子，终究还是没能洗脱自己当年所犯下的罪责，不知道他在死前有没有看到沈芸给他发的那条“爸爸，我爱你”的短信，希望他能在看到这条消息时能走得安心吧。</p><p>　　“公主转身的一瞬间泪流满面，因为她本身也是一个谎言。”看到真相后再去理解沈芸给于海讲的这个故事，真的很触动，当时的两人都已经开始陷入粉色的漩涡中收不住脚了，沈芸却这样用一种欢喜的态度讲出了这个象征着真相的故事，话说现实生活中真的有人能做到这点吗？还是说那些在其它类似影视剧中本应该表现出来的悲伤已经被无形的删减掉了？</p><p>　　在豆瓣经过了几天的洗礼之后，有这么个观点确实影响到了我对这部剧的看法。有人说前边沈芸和于海的感情是为了让聪明的于海放下疑心的一种设计，所以后来不得不假戏真做，这就使得沈芸和于海的爱情没有了丝毫的浪漫温馨可言，反而凭添了几分冰冷，这点也让我这几天沉浸在满足感中的我瞬间清醒了过来。如果说连爱情都不是真正的爱情，那这部剧的暖色调就真的像绑架游戏一样所剩无几了。</p><p>　　总之吧，如果单纯的把这部剧当做一部情感剧来看的话，加上剧情的转折完全可以给到8-9分甚至更高，但如果是作为悬疑剧来看，7分左右吧，而且会随着对它的认知程度逐渐降低，所以最终可能停留在6-7分之间。所幸我的一刷是奔着糖来的，所以才会有这么深的感触。</p><p>　　所以如果让我推荐的话，看感情：不多说了自己去看吧，绝对亏不了。看悬疑：还行，有亮点也有缺点，评分一般。</p><p>　　观后感就这样吧，过几天会出一个短片，有兴趣的小伙伴们可以搜搜看。</p><h2 id="不解"><a href="#不解" class="headerlink" title="不解"></a>不解</h2><p>　　“盘龙龙以前是混社会的，他出来以后不管干的是不是正当营生，都有他自己的路子。于海跟这样的人认识，肯定也有自己的路子。”所以于海这路子到时是个啥捏？还有警察在于海办公室翻出来的那个本子，写着L100，B90，Y10，TA200，一直没明白有啥用，是啥意思？个人猜测可能是那400万的分钱明细，TA代表路婕，两百万，Y应该是养老院，L和B其中一个是给龙哥还高利贷的，不过我记得第一集说光利息就要一百万，话说于海真的能还的起吗？</p>]]></content>
    
    <summary type="html">
    
      十日游戏观感
    
    </summary>
    
    
    
      <category term="书影感评" scheme="https://mengze.top/tags/%E4%B9%A6%E5%BD%B1%E6%84%9F%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>【ME】回来吧大叔观感</title>
    <link href="https://mengze.top/[ME]%E5%9B%9E%E6%9D%A5%E5%90%A7%E5%A4%A7%E5%8F%94%E8%A7%82%E6%84%9F/"/>
    <id>https://mengze.top/[ME]%E5%9B%9E%E6%9D%A5%E5%90%A7%E5%A4%A7%E5%8F%94%E8%A7%82%E6%84%9F/</id>
    <published>2019-06-02T16:00:00.000Z</published>
    <updated>2020-07-26T04:41:50.663Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-郑智薰-吴涟序】难得活两次，嗨起来啊兄弟！"><a href="#【音乐向-郑智薰-吴涟序】难得活两次，嗨起来啊兄弟！" class="headerlink" title="【音乐向/郑智薰/吴涟序】难得活两次，嗨起来啊兄弟！"></a>【音乐向/郑智薰/吴涟序】难得活两次，嗨起来啊兄弟！</h2><blockquote><p>音乐：탑독 - 《FEEL ALIVE》</p></blockquote><p><a href="https://www.bilibili.com/video/BV1Kb411H7M3" target="_blank"><img src="/sourcefile/[ME]回来吧大叔观感/F.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1Kb411H7M3" target="_blank" rel="external">Bilibili：BV1Kb411H7M3</a></li></ul></blockquote><h2 id="【音乐向】那很美好，不管是欢乐还是悲哀，都很美好。"><a href="#【音乐向】那很美好，不管是欢乐还是悲哀，都很美好。" class="headerlink" title="【音乐向】那很美好，不管是欢乐还是悲哀，都很美好。"></a>【音乐向】那很美好，不管是欢乐还是悲哀，都很美好。</h2><blockquote><p>音乐：Ailee - 《사랑이니까 》(Inst.)</p></blockquote><p><a href="https://www.bilibili.com/video/BV1y4411n7Qq" target="_blank"><img src="/sourcefile/[ME]回来吧大叔观感/B.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1y4411n7Qq" target="_blank" rel="external">Bilibili：BV1y4411n7Qq</a></li></ul></blockquote><h2 id="【音乐向-郑智薰-吴涟序】要幸福哦，大婶。"><a href="#【音乐向-郑智薰-吴涟序】要幸福哦，大婶。" class="headerlink" title="【音乐向/郑智薰/吴涟序】要幸福哦，大婶。"></a>【音乐向/郑智薰/吴涟序】要幸福哦，大婶。</h2><blockquote><p>音乐：손호영 - 《Moon Light》</p></blockquote><p><a href="https://www.bilibili.com/video/BV114411n7PQ" target="_blank"><img src="/sourcefile/[ME]回来吧大叔观感/M.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV114411n7PQ" target="_blank" rel="external">Bilibili：BV114411n7PQ</a></li></ul></blockquote><h2 id="【音乐向】总有一天，我会成为你想象中的我！"><a href="#【音乐向】总有一天，我会成为你想象中的我！" class="headerlink" title="【音乐向】总有一天，我会成为你想象中的我！"></a>【音乐向】总有一天，我会成为你想象中的我！</h2><blockquote><p>音乐：Various Artists - 《Heaven Tension》</p></blockquote><p><a href="https://www.bilibili.com/video/BV1u4411M7yb" target="_blank"><img src="/sourcefile/[ME]回来吧大叔观感/H.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1u4411M7yb" target="_blank" rel="external">Bilibili：BV1u4411M7yb</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      回来吧大叔观感
    
    </summary>
    
    
    
      <category term="书影感评" scheme="https://mengze.top/tags/%E4%B9%A6%E5%BD%B1%E6%84%9F%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>【MV】【音乐向/励志向/奋斗】因为有梦，我们选择成长；因为成长，我们更加坚强。</title>
    <link href="https://mengze.top/[MV]%E9%A3%98%E5%90%91%E5%8C%97%E6%96%B9_%E5%8A%B1%E5%BF%97%E5%90%91%E6%B7%B7%E5%89%AA/"/>
    <id>https://mengze.top/[MV]%E9%A3%98%E5%90%91%E5%8C%97%E6%96%B9_%E5%8A%B1%E5%BF%97%E5%90%91%E6%B7%B7%E5%89%AA/</id>
    <published>2019-04-20T16:00:00.000Z</published>
    <updated>2020-07-26T04:12:10.032Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-励志向-奋斗】因为有梦，我们选择成长；因为成长，我们更加坚强。"><a href="#【音乐向-励志向-奋斗】因为有梦，我们选择成长；因为成长，我们更加坚强。" class="headerlink" title="【音乐向/励志向/奋斗】因为有梦，我们选择成长；因为成长，我们更加坚强。"></a>【音乐向/励志向/奋斗】因为有梦，我们选择成长；因为成长，我们更加坚强。</h2><blockquote><p>音乐：邓紫棋/黄明志 - 《飘向北方》</p></blockquote><p><a href="https://www.bilibili.com/video/BV18b411V7e8" target="_blank"><img src="/sourcefile/[MV]飘向北方_励志向混剪/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV18b411V7e8" target="_blank" rel="external">Bilibili：BV18b411V7e8</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      飘向北方_励志向混剪
    
    </summary>
    
    
    
      <category term="图影设计" scheme="https://mengze.top/tags/%E5%9B%BE%E5%BD%B1%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>【MV】【音乐向/轻动漫】一眼千年难忘，他日相见，又何妨。</title>
    <link href="https://mengze.top/[MV]%E7%BC%98%E8%B5%B7_%E7%99%BD%E8%9B%87%E7%BC%98%E8%B5%B7%E5%89%AA%E8%BE%91/"/>
    <id>https://mengze.top/[MV]%E7%BC%98%E8%B5%B7_%E7%99%BD%E8%9B%87%E7%BC%98%E8%B5%B7%E5%89%AA%E8%BE%91/</id>
    <published>2019-04-12T16:00:00.000Z</published>
    <updated>2020-07-26T04:34:11.688Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-微科幻】一城，一世界；一灯，一文明。"><a href="#【音乐向-微科幻】一城，一世界；一灯，一文明。" class="headerlink" title="【音乐向/微科幻】一城，一世界；一灯，一文明。"></a>【音乐向/微科幻】一城，一世界；一灯，一文明。</h2><blockquote><p>音乐：周深 - 《缘起》</p></blockquote><p><a href="https://www.bilibili.com/video/BV1pb411K754" target="_blank"><img src="/sourcefile/[MV]缘起_白蛇缘起剪辑/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1pb411K754" target="_blank" rel="external">Bilibili：BV1pb411K754</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      缘起_白蛇缘起剪辑
    
    </summary>
    
    
    
      <category term="图影设计" scheme="https://mengze.top/tags/%E5%9B%BE%E5%BD%B1%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>【ME】微光城市观影感</title>
    <link href="https://mengze.top/[ME]%E5%BE%AE%E5%85%89%E5%9F%8E%E5%B8%82%E8%A7%82%E5%BD%B1%E6%84%9F/"/>
    <id>https://mengze.top/[ME]%E5%BE%AE%E5%85%89%E5%9F%8E%E5%B8%82%E8%A7%82%E5%BD%B1%E6%84%9F/</id>
    <published>2019-03-15T16:00:00.000Z</published>
    <updated>2020-07-26T04:39:29.072Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-微科幻】一城，一世界；一灯，一文明。"><a href="#【音乐向-微科幻】一城，一世界；一灯，一文明。" class="headerlink" title="【音乐向/微科幻】一城，一世界；一灯，一文明。"></a>【音乐向/微科幻】一城，一世界；一灯，一文明。</h2><blockquote><p>音乐：Andrew Lockington - 《One Last Message》</p></blockquote><p><a href="https://www.bilibili.com/video/BV1bb411J7AD" target="_blank"><img src="/sourcefile/[ME]微光城市观影感/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1bb411J7AD" target="_blank" rel="external">Bilibili：BV1bb411J7AD</a></li></ul></blockquote><p>　　第一次看这部电影的时候，心里乱糟糟的不知道想做些什么，只记得那天下午连续看了四五部各种类型的电影，而最后就只记住了这么一部朋克风的微科幻。</p><p>　　影片开头便是微光城市的起源，没有说明没有铺垫，人类被迫着进入了寄寓了人类最后希望的地下城市，然后时间就瞬间走过了二百年，一切曾经美好的东西都变得陈旧不堪，无论是城市本身还是它的灵魂，似乎一切都在走向一条没有光明的末路。</p><p>　　从开头的环境来看，创造者人类的科技水平是很高的，有着足够坚固的盒子和能够稳定并精密运行二百年之久的计时器。而随着时间流逝，微光城市的社会开始逐渐的向着低谷发展，一代代人的更迭让原有的先进的思想和知识不断退化，管理者的思想也开始一代代变得迂腐保守，整个城市都笼罩着一股末世般的绝望感。</p><p>　　看到整个城市的布局和那个巨大的发动机后不觉想到了一个叫《Frostpunk》的游戏，两者的故事背景和剧情发展有着很大程度的相似性，而且最重要的，是它们都有着一种在无尽的黑暗中寻找星星之火的压抑感，以及隐藏在所有人心底的那种无法磨灭的孤独。</p><p>　　当看到她们在讨论会不会有创造者来拯救他们的时候，脑海中突然产生了一种令人恐惧的联系，地球会不会就是另一种意义上的微光城市呢？假如地球也到了看不到光明的那一天，是否也会有人满怀着希望去等那根本不存在的创造者来拯救呢？</p><p>　　其实不用去想，这种人肯定是会有的，而且有这种人也是好的，至少他们能看得到希望，哪怕只是幻想。从这一个只有几百人的最后的人类城市中，也有着各种各样的人充当着地球社会的各个部分，无论是探索者，无作为者，亦或是那些贪污者附势者，其实放在大环境里，这些人的特点不会这么明显，可当他们处在一个相对的境遇下，原本的中庸就在无形中被放大，最终成为总集合中的一个鲜明的类别。</p><p>　　在我看来，对于一个文明来说最重要的，是在时间的长河中所留下的痕迹。两百年不长，却也隔绝了几代人的记忆，一个小小的断折便让几千年人类文明的历史在后代的脑海中消失的无影无踪，所谓正统的历史，也无非是在大量的材料堆叠下虚构出来的最为合理的解释。可我们终究不是历史的旁观者，谁也无法确定所谓的合理是否真的具有表述事实的能力。所以说，痕迹，是让其他的文明真正认识我们的途径，而这些其他的文明中，可能包含着我们的子孙后代。</p><p>　　仔细想想看，微光城市其实可以算得上是另一个地球了，可是为什么会有着这种与现实世界截然相反的发展轨迹呢？答案就是丧失了探索。微光城市就像是闭关锁国的大清，虽然可以自给自足，可总会有凭一己之力拯救不了的灾难，到那时人类失去的就不仅仅是物质和生命了，那会是一场看不到任何希望的黑暗，就像刘慈欣曾写过的：如果你看见一面墙，往上往下往左往右都看不到尽头，永远抵达不了边界，那就是死亡。文明的死亡。几代人辛辛苦苦赞下的基业就这样在深不见底的地下慢慢地腐朽废殆，再也见不到天日。所以说人类的探索，不仅仅是为了拓宽眼界习得新知，更是为了在最后的关头能有哪怕星星之火指引我们走向永无止尽的未来。未来，才是人类最宝贵的财富。</p><p>　　总之，笔者还是挺喜欢这种小众的科幻片的，不仅仅是因为它的新意和特效等等，最主要的是它有内容，能让观众在看完电影后知道自己看了什么。评分的话给个7.7分吧，如果有意愿的小伙伴可以先去看下预告，祝各位观影愉快。</p>]]></content>
    
    <summary type="html">
    
      微光城市观影感
    
    </summary>
    
    
    
      <category term="书影感评" scheme="https://mengze.top/tags/%E4%B9%A6%E5%BD%B1%E6%84%9F%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>【MV】【音乐向/GMV】在追寻自由的征程上，永不孤存！</title>
    <link href="https://mengze.top/[MV]WarriorConcerto_%E9%A3%99%E9%85%B7%E8%BD%A6%E7%A5%9ECG%E6%B7%B7%E5%89%AA/"/>
    <id>https://mengze.top/[MV]WarriorConcerto_%E9%A3%99%E9%85%B7%E8%BD%A6%E7%A5%9ECG%E6%B7%B7%E5%89%AA/</id>
    <published>2019-03-03T16:00:00.000Z</published>
    <updated>2020-07-26T03:35:01.165Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-GMV】在追寻自由的征程上，永不孤存！"><a href="#【音乐向-GMV】在追寻自由的征程上，永不孤存！" class="headerlink" title="【音乐向/GMV】在追寻自由的征程上，永不孤存！"></a>【音乐向/GMV】在追寻自由的征程上，永不孤存！</h2><blockquote><p>音乐：The Glitch Mob - 《Warrior Concerto》</p></blockquote><p><a href="https://www.bilibili.com/video/BV1Vb411z74R" target="_blank"><img src="/sourcefile/[MV]WarriorConcerto_飙酷车神CG混剪/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1Vb411z74R" target="_blank" rel="external">Bilibili：BV1Vb411z74R</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      WarriorConcerto_飙酷车神CG混剪
    
    </summary>
    
    
    
      <category term="图影设计" scheme="https://mengze.top/tags/%E5%9B%BE%E5%BD%B1%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>【MV】【音乐向/GMV/剧情向】自由，只是强者给弱者的幻想。</title>
    <link href="https://mengze.top/[MV]StarSky_%E6%98%9F%E9%99%85%E4%BA%89%E9%9C%B82%E8%99%9A%E7%A9%BA%E4%B9%8B%E9%81%97CG%E6%B7%B7%E5%89%AA/"/>
    <id>https://mengze.top/[MV]StarSky_%E6%98%9F%E9%99%85%E4%BA%89%E9%9C%B82%E8%99%9A%E7%A9%BA%E4%B9%8B%E9%81%97CG%E6%B7%B7%E5%89%AA/</id>
    <published>2019-02-24T16:00:00.000Z</published>
    <updated>2020-07-26T04:37:18.825Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-GMV-剧情向】自由，只是强者给弱者的幻想。"><a href="#【音乐向-GMV-剧情向】自由，只是强者给弱者的幻想。" class="headerlink" title="【音乐向/GMV/剧情向】自由，只是强者给弱者的幻想。"></a>【音乐向/GMV/剧情向】自由，只是强者给弱者的幻想。</h2><blockquote><p>音乐：Two Steps From Hell -《Star Sky》Instrumental</p></blockquote><p><a href="https://www.bilibili.com/video/BV1bb411879P" target="_blank"><img src="/sourcefile/[MV]StarSky_星际争霸2虚空之遗CG混剪/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1bb411879P" target="_blank" rel="external">Bilibili：BV1bb411879P</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      StarSky_星际争霸2虚空之遗CG混剪
    
    </summary>
    
    
    
      <category term="图影设计" scheme="https://mengze.top/tags/%E5%9B%BE%E5%BD%B1%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>【MV】【音乐向/GMV/燃向】你加冕为王，而我终将逝去。</title>
    <link href="https://mengze.top/[MV]BecomingALegend_%E9%AD%94%E5%85%BD%E4%B8%96%E7%95%8CCG%E6%B7%B7%E5%89%AA/"/>
    <id>https://mengze.top/[MV]BecomingALegend_%E9%AD%94%E5%85%BD%E4%B8%96%E7%95%8CCG%E6%B7%B7%E5%89%AA/</id>
    <published>2019-02-23T16:00:00.000Z</published>
    <updated>2020-07-26T04:37:44.218Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-GMV-燃向】你加冕为王，而我终将逝去。"><a href="#【音乐向-GMV-燃向】你加冕为王，而我终将逝去。" class="headerlink" title="【音乐向/GMV/燃向】你加冕为王，而我终将逝去。"></a>【音乐向/GMV/燃向】你加冕为王，而我终将逝去。</h2><blockquote><p>音乐：John Dreamer - 《Becoming a Legend》</p></blockquote><p><a href="https://www.bilibili.com/video/BV12b411m7qc" target="_blank"><img src="/sourcefile/[MV]BecomingALegend_魔兽世界CG混剪/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV12b411m7qc" target="_blank" rel="external">Bilibili：BV12b411m7qc</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      BecomingALegend_魔兽世界CG混剪
    
    </summary>
    
    
    
      <category term="图影设计" scheme="https://mengze.top/tags/%E5%9B%BE%E5%BD%B1%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>【MV】【音乐向/燃向/2018年度】冬天尽了，春天还远吗？</title>
    <link href="https://mengze.top/[MV]2018%E5%B9%B4%E5%BA%A6%E5%A4%A7%E6%B7%B7%E5%89%AA/"/>
    <id>https://mengze.top/[MV]2018%E5%B9%B4%E5%BA%A6%E5%A4%A7%E6%B7%B7%E5%89%AA/</id>
    <published>2019-02-11T16:00:00.000Z</published>
    <updated>2020-07-26T04:38:20.985Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-燃向-2018年度】冬天尽了，春天还远吗？"><a href="#【音乐向-燃向-2018年度】冬天尽了，春天还远吗？" class="headerlink" title="【音乐向/燃向/2018年度】冬天尽了，春天还远吗？"></a>【音乐向/燃向/2018年度】冬天尽了，春天还远吗？</h2><blockquote><p>音乐：<br>NINJA TRACKS - 《Dystopian State》<br>Hi Finesse - 《Slowly Into The Light》<br>混缩</p></blockquote><p><a href="https://www.bilibili.com/video/BV12b411m7qc" target="_blank"><img src="/sourcefile/[MV]2018年度大混剪/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV12b411m7qc" target="_blank" rel="external">Bilibili：BV12b411m7qc</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      2018年度大混剪
    
    </summary>
    
    
    
      <category term="图影设计" scheme="https://mengze.top/tags/%E5%9B%BE%E5%BD%B1%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>【ME】有五个姐姐的我就注定要单身了啊观影感</title>
    <link href="https://mengze.top/[ME]%E6%9C%89%E4%BA%94%E4%B8%AA%E5%A7%90%E5%A7%90%E7%9A%84%E6%88%91%E5%B0%B1%E6%B3%A8%E5%AE%9A%E8%A6%81%E5%8D%95%E8%BA%AB%E4%BA%86%E5%95%8A%E8%A7%82%E5%BD%B1%E6%84%9F/"/>
    <id>https://mengze.top/[ME]%E6%9C%89%E4%BA%94%E4%B8%AA%E5%A7%90%E5%A7%90%E7%9A%84%E6%88%91%E5%B0%B1%E6%B3%A8%E5%AE%9A%E8%A6%81%E5%8D%95%E8%BA%AB%E4%BA%86%E5%95%8A%E8%A7%82%E5%BD%B1%E6%84%9F/</id>
    <published>2019-01-15T16:00:00.000Z</published>
    <updated>2020-07-26T04:39:11.962Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-项婕如-蔡凡熙】谢谢你，让我喜欢上，一直努力的你。"><a href="#【音乐向-项婕如-蔡凡熙】谢谢你，让我喜欢上，一直努力的你。" class="headerlink" title="【音乐向/项婕如/蔡凡熙】谢谢你，让我喜欢上，一直努力的你。"></a>【音乐向/项婕如/蔡凡熙】谢谢你，让我喜欢上，一直努力的你。</h2><blockquote><p>音乐：校长（张弛） - 《我不是宝宝》</p></blockquote><p><a href="https://www.bilibili.com/video/BV1jt411p72x" target="_blank"><img src="/sourcefile/[ME]有五个姐姐的我就注定要单身了啊观影感/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1jt411p72x" target="_blank" rel="external">Bilibili：BV1jt411p72x</a></li></ul></blockquote><p>　　莫名其妙的看了一部预告片，莫名其妙的默默等了大半年，然后看了这部莫名奇妙的电影，沉淀了心底莫明其妙的触动，这算是对这部电影最笼统的一种评价吧。</p><p>　　夸张的手法可以说是从小学就开始接触的一种手法了，用比较夸张的话来谈这部电影，就是在夸张的深渊那微妙的悬崖边缘疯狂的试探。不过，效果是好的，配上台湾电影那种独特的话语风格，让整部电影有了一种喜剧之外别有的风味。疯狂是这部电影的主打色，可抛开华丽的外表，炫光之下的感情却是它真正要表达的主题。</p><p>　　感情中伴随着战斗的快感，快感中夹杂着戏谑的诙谐，而诙谐中流露出来的，依然是这个世界少不了的亲情和爱情。这不是正常的人生，这不是正常的电影，可这却是恋爱中再熟悉不过的剧情。在电光火石间，在七彩斑斓下，那一瞬间的心动决定了整个下半部的旅程。</p><p>　　电影不像长剧，没有那么多的时间来铺垫那种日久生情的恋爱，喜欢上一个人，也许就在那一瞬间，从相知，到依赖，就在所有人未知未觉的狂热中，一场看似闹剧的恋爱，一份不合常理的呵护，伴着这些无尽的夸张悄然流入心里，如同一条毛毛虫在心里慢慢地爬着，爬着，麻酥酥的却又欲罢不能。</p><p>　　小清新类型的电影开始惹越来越多的人喜爱，而说起清新，再也没有其他电影比它更适合这个词了吧。无论是整部电影的风格，还是它表现出来的主题，都处在一个很广阔的层面，没有拘于小节的那种紧迫感，从始到终都给人一种眼前一亮的感觉。在清新之余，一股武侠的气息若隐若现的贯穿了整部电影，这也是它很独特的一种质感，在细腻的恋爱中加入一点舒缓和松弛，让电影的灰色天空多了不少明色。</p><p>　　说到这里，再来谈一下配角的问题。看完电影，你们还记得那个默默为小梦做着一切的他吗？反正看了两遍之后，我是一点儿印象都没有，嗯，他叫徐焦男，这是我又回去翻了一遍才找到的，刚看完电影的时候，记得他的炸弹记得他的台词，可就是想不起来他叫什么长什么样子。这个问题还是在看结尾花絮的时候想到的，不知是剧情多余被剪掉了还是根本拍了没想要加进去，对于电影中的他来说，如果不是两个主角吵架，他应该也没有后面露脸的机会，就这么为自己关心的人默默的奉献着，无所欲亦无所求，这就是真心的守护吧。所以对于这种有满天星花语性格的男人，还是应该值得被欣赏的，虽然最后有些反面化，剧情需要嘛。</p><p>　　作为一部不把名字打算都不一定搜的到而名字又长的离谱的小众电影，虽说评价一般，但小小怡情还是不错的，而且说不定就是适合你的风格哦。</p><p>　　最后给大家也算是给自己提个醒，码字一定要找个可以恢复上一步的东西来码，不要找个地方随手一敲，等那些字都没了，才知道当初的随随便便是写的哪块心头肉。后悔之余，再硬着头皮把思想再一点一点找回来，真的是令人无比泄气的一件事….</p>]]></content>
    
    <summary type="html">
    
      有五个姐姐的我就注定要单身了啊观影感
    
    </summary>
    
    
    
      <category term="书影感评" scheme="https://mengze.top/tags/%E4%B9%A6%E5%BD%B1%E6%84%9F%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>【ME】超时空同居观影感</title>
    <link href="https://mengze.top/[ME]%E8%B6%85%E6%97%B6%E7%A9%BA%E5%90%8C%E5%B1%85%E8%A7%82%E5%BD%B1%E6%84%9F/"/>
    <id>https://mengze.top/[ME]%E8%B6%85%E6%97%B6%E7%A9%BA%E5%90%8C%E5%B1%85%E8%A7%82%E5%BD%B1%E6%84%9F/</id>
    <published>2019-01-14T16:00:00.000Z</published>
    <updated>2020-07-26T04:40:35.906Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-雷佳音-佟丽娅】我多想留住，跨过时光、路过人潮、奔向我的你。"><a href="#【音乐向-雷佳音-佟丽娅】我多想留住，跨过时光、路过人潮、奔向我的你。" class="headerlink" title="【音乐向/雷佳音/佟丽娅】我多想留住，跨过时光、路过人潮、奔向我的你。"></a>【音乐向/雷佳音/佟丽娅】我多想留住，跨过时光、路过人潮、奔向我的你。</h2><blockquote><p>音乐：刘瑞琦 - 《房间》（新版）</p></blockquote><p><a href="https://www.bilibili.com/video/BV1wt411p7SX" target="_blank"><img src="/sourcefile/[ME]超时空同居观影感/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1wt411p7SX" target="_blank" rel="external">Bilibili：BV1wt411p7SX</a></li></ul></blockquote><p>　　时间就像唱片，一点一点把无数个此时此刻旋转到上一圈的轮回。无论在哪个起点，总能找得到一段听得过去的音弦。也许哪一天，时空错乱，两首曲调交相融合，在咿呀咿呀的声响中，汇出一首全新的曲谱，然后封入唱片，在记忆的角落里缓缓地旋着，慢慢地转着，一直等着看不见尽头的未来。</p><p>　　关于穿越的题材，在几年前有一段挺火的日子，然后就回归到了正常的水平。而在那之后，真正能算得上脱颖而出的作品，也就《你的名字》莫属了。对于《超时空同居》这部电影，一开始其实是奔着预告片中的徐峥去看的，毕竟他在电影中几乎所有的镜头都加到了预告里，所以把他当做主演之一还是很合情合理的。于是乎，就这样看完了电影，然后完全忽视了徐峥这个捞海底拉面师的客串角色。虽说如此吧，但这部电影也没有辜负大众们对它的期望，而且可以算是自《你的名字》之后真正能让人记忆深刻的相关类型的电影了。</p><p>　　陆鸣生活在99年，有着那个时代特有的淳朴，而放到现在来讲，可以说是有些呆萌，就好像大学刚毕业没接触过社会般的小青年，满怀着热血和抱负却苦于怀才不遇而郁郁终日，表面老实巴交的他心底藏着一种不羁的调皮，在那个还算不上新潮的时代活着自己的精彩。而谷小焦呢，可是说真的是陆鸣的镜子了，小时候的千金大小姐一夜之间落魄到了社会的底层，为了回到曾经的家不惜用自己的未来做陪嫁….然后就被骗走了几乎所有的积蓄。她是新时代的象征，在这个遍地分享遍地共享的世界一丝不苟的擦拭着自己的时间。她热闹她活泼她虚荣她权势，她就在这个看似没有人的2018过着该过的生活有着该有的性格，然后就在某一天的清晨，在阳光落进屋里的时候，两条渐进的曲线终于越过了那个不存在的交点，走向了相互交结的永恒。</p><p>　　人生就像一个迷宫，我们要做各种各样的决定，而好的决定，却不一定是对的。人生的变折，总在一个风雨交加的夜晚被狂风和骤雨干扰着自己一生中最重要的一个判断，然后在心中还看不清方向的时候，生米早已煮成了熟饭，被迫着以一种不甘愿的姿态走向自己梦寐以求的成功。于是好人变成了坏人，坏人变成了恶人，然后在五光十色的灯火中，渐渐迷失了自己的本心。</p><p>　　看着陆鸣和陆石屹，总是不想相信他们是同一个人，19年的时间，让一个人从舍不得去爱变成了不敢去爱。有句话我在之前的文章也曾说过:看着别人的成长是一件很残酷的事情。世界上真的没有那么多的十全十美，若想有所得，定要先舍弃一些东西，那什么是应该舍得呢？什么是愿意舍得呢？面对着这一切该放下的不该放下的，又要怎样抉择呢？其实并不难，面对着19年后的自己，看着他的双眼，认真的问问自己那到底是不是自己想要的生活，一切都会明了。可在现实中，这又怎么可能做的到，所以说上天给了陆鸣一个重新选择的机会，让这一切的故事，不再是一个难以挽回的结局。</p><p>　　第一个结局是不欢喜的，两个人在最后的转角道别重回自己的时空，然后留下一段陈旧的回忆放在19年前的那盘磁带里一个人孤守着。而藏在幕后的第二个结局，终于还是为这段发酵了19年的故事打上了一个令人破涕为笑的句号，而就是这么个结局，让这部电影突然之间就变了一个风格，没有离别分手时的矫揉造作，没有抱憾而终的失落空虚，之前的悲伤都在这一刹那间释怀，一部真真正正的喜剧，就这样诞生了。</p><p>　　表演，其实不是一件容易的事，真正好的演员，永远是在用心表述着每一个画面。看到佟丽娅在演谷小焦假装笑得很开心的时候，真真切切的能感受到那种藏的很深的心酸和无奈。可以说，佟丽娅和雷佳音很完美的诠释了三个角色，这也是这部电影成功的一个不可或缺的要素。</p><p>　　说了这么多亮点，那么再来谈一下它最大的问题吧。之前看过的不少时空类型的影片，什么流星划过天际啦，什么黑洞影响了时空啦，亦或是几百光年外的超新星爆发啦，哪一个穿越的理由都感觉更适合这部电影，而它却有些莫名其妙的走出来了一个无厘头的科学家，当然，我猜它可能是想表达因果报应这种观念吧，这剧情也不是不合理，然而就是感觉….不浪漫。其实若是个悬疑剧，这种穿越的方式是很OK的，但这却是个爱情片，在无形之中剥夺了一些爱情的温馨感。</p><p>　　说这么多，其实还是挺推荐大家看一下这部电影的，虽说某些情节给它拉低了不少的评分。和同样是去年出的《2:22》相比，各有各的特色吧，《超时空同居》更偏喜剧一点，而《2:22》偏情感一些，总的来说，两部都是不错的电影，值得一看哦。</p>]]></content>
    
    <summary type="html">
    
      超时空同居观影感
    
    </summary>
    
    
    
      <category term="书影感评" scheme="https://mengze.top/tags/%E4%B9%A6%E5%BD%B1%E6%84%9F%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>【ME】假装情侣观影感</title>
    <link href="https://mengze.top/[ME]%E5%81%87%E8%A3%85%E6%83%85%E4%BE%A3%E8%A7%82%E5%BD%B1%E6%84%9F/"/>
    <id>https://mengze.top/[ME]%E5%81%87%E8%A3%85%E6%83%85%E4%BE%A3%E8%A7%82%E5%BD%B1%E6%84%9F/</id>
    <published>2019-01-06T16:00:00.000Z</published>
    <updated>2020-07-26T04:40:05.284Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-黄渤-江一燕】开始是困难的，分手是痛苦的，所以只要中间那段最美好的-…"><a href="#【音乐向-黄渤-江一燕】开始是困难的，分手是痛苦的，所以只要中间那段最美好的-…" class="headerlink" title="【音乐向/黄渤/江一燕】开始是困难的，分手是痛苦的，所以只要中间那段最美好的 …."></a>【音乐向/黄渤/江一燕】开始是困难的，分手是痛苦的，所以只要中间那段最美好的 ….</h2><blockquote><p>音乐：谭维维 - 《害怕爱上你》</p></blockquote><p><a href="https://www.bilibili.com/video/BV1Rt411W71W" target="_blank"><img src="/sourcefile/[ME]假装情侣观影感/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1Rt411W71W" target="_blank" rel="external">Bilibili：BV1Rt411W71W</a></li></ul></blockquote><p>　　每次看电影前，总是左挑右选想找一部自己真正想看的，可面对着那些陌生的题目，却总也找不到一个看似适合自己的电影。于是时间就这样在一页页翻阅着的目录中流走，而自己观影的热情也一点一点的消耗殆尽。这也许就是所谓的选择恐惧吧，可生活中很多事不都这样吗？于是乎，缘分就成了我放弃选择的借口，每当犹豫不决的时候，就把选择的权力交给直觉，自己默默的做一个忠实的执行者。</p><p>　　有句话在记忆中一直沉浮着：感情是可以培养出来的。两个人从相识，到相知，再到刻骨铭心，也许时间是唯一的见证者，但那段记忆，终究会被心底的执着守护着，珍藏着。两个人的世界，有了彼此，一切便可知足了。</p><p>　　“既然开始是困难的分手又那么痛苦，所以我只想要爱情中间那段最美好的。”第一遍看《假装情侣》的时候，确实是有些摸不到头脑的，看完之后也没有太大的感触。而在剪辑时，顺着剧情又走了一遍，也许是挑选片段看的更为仔细，也许是早已知道故事的发展让一些情节展现出了更加细腻的感情，总之在看第二遍时，一些细节上的东西渐渐的浮现了出来，也让中后期的剧情有了更加浓郁的伤感。</p><p>　　刚开始的剧情是有些突兀的，两个人就如同沈露的那句话，直接进入了爱情的中间，过程顺滑的仿佛用了飘柔的秀发。可开心的生活，总是在未知未觉中沉淀到心底，改变着那些曾经坚守在心底的信念。有时爱上一个人，就如同做梦般，不知道是从什么时候开始的，当某天静下心来看一看远方的路，才发现已经离不开身边的依赖了。时间确实是一剂可以包治百病的良药，拿来做借口的暂时，就已经足够缝补起身心的伤口了。</p><p>　　江南曾在龙三里写过：“悲剧还是喜剧通常在开篇的时候就已经决定了，即便结尾还未确定……喜剧中欢乐是为了让人笑，而悲剧中的欢乐是为了让人在结尾时的悲伤加倍，你曾有多快乐，就得用双倍的悲伤来买单，所以一个好的剧作家必须学会写欢乐，即使他们根本不相信世界上存在欢乐这种东西。”</p><p>　　好在，像南大那样绝情的优秀笔者不算多数，这种悲喜的对比在本剧中只算是一种营造的氛围，而且结尾是喜剧，让它凭添了许多可以让人重复回味的东西。黄渤的作品多多少少还是会偏喜剧一些，而且不少地方还是因为他的悲情而搞笑，可在这里黄渤却演绎出了一个醇厚忠实让人看了心酸的痴情人。</p><p>　　看过豆瓣几多中评差评后，突然就对这部影片的看法有了一些转变。没有看过《我的野蛮女友》，所以不知道对比起来是什么感觉，可就单看这部电影来说，其实总体还可以的，喜剧效果虽然不强，但在氛围的烘托上差不到哪去，而且各路演员演的也挺不错的啊，至少没有太多生硬的表现。</p><p>　　如今观众们对影视剧的要求整体提高了不少，但我觉得看电影不是一个受罪的过程，而是一个放松思想的过程，所以说只要表现还看得过去，何必再去追求那些不完美的细节呢？看懂一个故事，感受到那种情怀就足够了，一千个人眼中有一千种哈姆雷特，既然看完了电影，我们更应该分享的是作品的优点和不足，而不是一味的去批判它的糟糕程度意欲让更多人远离这种所谓失败的作品，谁人还没有缺点了呢？</p><p>　　对于这部电影，给个6.8分吧，如果你真心想看，建议至少看两遍，影片时长的限制让它少了一些过程上的情节，不过整体的故事还是可以的，静下心来，慢慢品味吧，也许你就能找到那种专属自己的感情呢。</p>]]></content>
    
    <summary type="html">
    
      假装情侣观影感
    
    </summary>
    
    
    
      <category term="书影感评" scheme="https://mengze.top/tags/%E4%B9%A6%E5%BD%B1%E6%84%9F%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>【ME】【音乐向】游泳先生音乐向剪辑MV</title>
    <link href="https://mengze.top/[MV]%E6%B8%B8%E6%B3%B3%E5%85%88%E7%94%9F%E9%9F%B3%E4%B9%90%E5%90%91%E5%89%AA%E8%BE%91/"/>
    <id>https://mengze.top/[MV]%E6%B8%B8%E6%B3%B3%E5%85%88%E7%94%9F%E9%9F%B3%E4%B9%90%E5%90%91%E5%89%AA%E8%BE%91/</id>
    <published>2018-12-19T16:00:00.000Z</published>
    <updated>2020-07-26T04:35:47.104Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="【音乐向-剧情向-鞠婧祎】I-Need-Your-Love中英混合版游泳先生剪辑MV"><a href="#【音乐向-剧情向-鞠婧祎】I-Need-Your-Love中英混合版游泳先生剪辑MV" class="headerlink" title="【音乐向/剧情向/鞠婧祎】I Need Your Love中英混合版游泳先生剪辑MV"></a>【音乐向/剧情向/鞠婧祎】I Need Your Love中英混合版游泳先生剪辑MV</h2><blockquote><p>音乐：<br>张译文/严禹豪 - 《I NEED YOUR LOVE》<br>张译文 - 《我需要你的爱》<br>混缩版</p></blockquote><p><a href="https://www.bilibili.com/video/BV1Qt411e7oe" target="_blank"><img src="/sourcefile/[MV]游泳先生音乐向剪辑/I.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1Qt411e7oe" target="_blank" rel="external">Bilibili：BV1Qt411e7oe</a></li></ul></blockquote><h2 id="【音乐向-鞠婧祎】《想你了》游泳先生剪辑MV"><a href="#【音乐向-鞠婧祎】《想你了》游泳先生剪辑MV" class="headerlink" title="【音乐向/鞠婧祎】《想你了》游泳先生剪辑MV"></a>【音乐向/鞠婧祎】《想你了》游泳先生剪辑MV</h2><blockquote><p>音乐： 鞠婧祎 - 《想你了》</p></blockquote><p><a href="https://www.bilibili.com/video/BV1ct411v7qU" target="_blank" rel="external"><img src="/sourcefile/[MV]游泳先生音乐向剪辑/X.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1ct411v7qU" target="_blank" rel="external">Bilibili：BV1ct411v7qU</a></li></ul></blockquote><h2 id="【音乐向-鞠婧祎】《听到请回答》游泳先生剪辑MV"><a href="#【音乐向-鞠婧祎】《听到请回答》游泳先生剪辑MV" class="headerlink" title="【音乐向/鞠婧祎】《听到请回答》游泳先生剪辑MV"></a>【音乐向/鞠婧祎】《听到请回答》游泳先生剪辑MV</h2><blockquote><p>音乐：鞠婧祎 - 《听到请回答》</p></blockquote><p><a href="https://www.bilibili.com/video/BV1Et411v7qo" target="_blank" rel="external"><img src="/sourcefile/[MV]游泳先生音乐向剪辑/T.jpg"></a></p><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1Et411v7qo" target="_blank" rel="external">Bilibili：BV1Et411v7qo</a></li></ul></blockquote><h2 id="【片段-鞠婧祎-Mike】游泳先生片段Top"><a href="#【片段-鞠婧祎-Mike】游泳先生片段Top" class="headerlink" title="【片段/鞠婧祎/Mike】游泳先生片段Top"></a>【片段/鞠婧祎/Mike】游泳先生片段Top</h2><p><a href="https://v.youku.com/v_show/id_XMzk3Mjk5ODI2OA==.html?spm=a2hzp.8244740.0.0" target="_blank" rel="external"><img src="/sourcefile/[MV]游泳先生音乐向剪辑/PMid.jpg"></a></p><blockquote><ul><li><a href="https://v.youku.com/v_show/id_XMzk3Mjk5ODI2OA==.html?spm=a2hzp.8244740.0.0" target="_blank" rel="external">Youku</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      游泳先生剪辑
    
    </summary>
    
    
    
      <category term="图影设计" scheme="https://mengze.top/tags/%E5%9B%BE%E5%BD%B1%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>【K】Premier快速入门</title>
    <link href="https://mengze.top/[K]Premier%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <id>https://mengze.top/[K]Premier%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</id>
    <published>2018-12-15T16:00:00.000Z</published>
    <updated>2020-07-20T14:07:44.484Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><div class="row">    <embed src="/sourcefile/[K]Premier快速入门/Primer.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="基本概念常识"><a href="#基本概念常识" class="headerlink" title="基本概念常识"></a>基本概念常识</h2><ul><li>5.1声道(六条声道，方便声音操作)</li><li>色彩<ul><li>HSB：色相/饱和度/亮度</li><li>RGB：红绿蓝三原色+alpha透明</li><li>YUV：色度/亮度/浓度<br><img src="/sourcefile/[K]Premier快速入门/1.jpg" alt="YUV"></li></ul></li><li>场扫描<ul><li>逐行扫描(1080p)</li><li>隔行扫描(1080i)<ul><li>高场优先PAL(奇数行)</li><li>低场优先NTSC(偶数行)</li></ul></li></ul></li></ul><h2 id="拉片"><a href="#拉片" class="headerlink" title="拉片"></a>拉片</h2><ul><li>设置入点出点，Ctrl+U或Ctrl+拖动到项目面板或在素材源窗口右键制作子剪辑。<br>　多选右键用ME批量导出或直接用。</li><li>限制剪辑，无法再拉动改变长度。<br>　(此为勾选”将子剪辑限制为修剪边界”)</li></ul><h2 id="时间线窗口"><a href="#时间线窗口" class="headerlink" title="时间线窗口"></a>时间线窗口</h2><ul><li>基本<ul><li>音频轨道：M静音/S独奏</li><li>黄线：使用CPU/GPU直接渲染播放。<br>　红线：未渲染过的效果。<br>　绿线：已经渲染过的效果。</li><li>Enter为渲染入点出点间的效果</li><li>改变所见区域长度：<br>　1.伸缩滚动条长度<br>　2.Alt+滚轮<br>　3.+/-号</li><li>左右键进行前进后退，<br>　Shift+左右键加速。</li><li>时间线上I设置入点，O设置出点。<br>　右键-清除入点出点。<ul><li>设置入点出点后，轨道前方的Vi、Ai为选中状态时，<br>　;键(提升)将范围删除，’键(提取)将范围补全删除。<br>　(一般对多个轨道操作更方便)<br>　对于素材源的出入点范围：,插入，.覆盖。<br>　(需要在轨道前设置插入覆盖标记)</li></ul></li><li>Shift+拖动时间线吸附</li><li>选择工具V</li><li>手型工具H：拖动时间轴</li><li>缩放工具Z，Alt缩小</li><li>S开关对齐</li></ul></li><li>轨道<ul><li>在某个轨道上Alt+滚轮可直接缩放轨道，<br>　在某系列轨道Shift+滚轮同时将一系列轨道同时缩放。<ul><li>时间线设置上可设置轨道是否显示缩略图</li></ul></li><li>轨道上打开同步锁定可在改变前面片<br>　段的同时将后方的相对位置保持不变<br>　(可设置单层同步或多层同步)</li><li>轨道选择工具(向前-&gt;)A<br>　轨道选择工具(向后&lt;-)Shift+A<br>　Shift+选择：只选择一条轨道</li></ul></li><li>素材<ul><li>在轨道空白处右键删除波纹可快速删除空白</li><li>删除某段素材时，Shift+Del可以使后面的素材自动补全空隙。</li><li>直接移动素材(或出入点范围)为覆盖，<br>　Ctrl+拖动素材为插入，<br>　Ctrl+Alt+拖动素材后面的会自动补全多出来的缝隙。<br>　(若插入到一整段素材中会自动切割)<br>　Ctrl+Alt+拖动素材会自动修剪为要覆盖的素材长度。<ul><li>右键素材-使用剪辑替换-从关键帧<br>　(更为精确的在某个镜头替换素材)</li></ul></li><li>Ctrl+拖动素材长度使其他素材跟随不产生空隙<br>　Ctrl+点击可在B和N中快速切换<ul><li>在单个素材头尾相当于波纹编辑工具B<br>　(黄色箭头，只改变当前素材头或尾，序列长度变化)<br>　在两素材间相当于滚动编辑工具N<br>　(双向箭头，同时调整前素材尾和后素材头，序列总长度不变)<br>　(按住Shift多选后可同时对多个操作)<br>　(双击素材头尾可进行精确定位)</li><li>Ctrl+左右键进行快速修剪<br>　(波纹编辑或滚动编辑)</li></ul></li><li>内滑工具Y：将此素材的入点出点范围在源素材上进行滑动<br>　(素材长度不变，不改变其他素材)<br>　外滑工具U：将此素材在轨道上进行滑动<br>　(轨道长度不变，素材本身不变，改变相邻两段素材出入点)</li><li>钢笔工具P：快速在轨道上编辑关键帧<br>　Ctrl进行整段微调或对关键帧进行曲线调整(贝塞尔曲线)<br>　Alt进行垂直调整<br>　Shift吸附</li><li>Ctrl+K快速切断<br>　(相当于剃刀工具C)<br>　Shift可将所有轨道切割<br>　(如Ctrl+Shift+K)</li><li>Ctrl+点击快速在轨道素材上添加关键帧</li><li>时间线上按住Shift多选素材</li><li>多选素材-右键嵌套，可快速生成子序列</li><li>多选素材，右键编组，可进行同时拖放</li></ul></li></ul><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><ul><li>过渡<ul><li>Ctrl+D添加默认过渡(交叉溶解)，<br>　若选择多个素材可全部添加。</li><li>在效果中右键效果可设置默认过渡效果。</li><li>直接拖动改变两侧长短，<br>　Shift+拖动只改变一侧长短。</li></ul></li><li>改变速度<ul><li>右键素材-修改-解释素材-采用此帧速率</li><li>右键素材-速度/持续时间</li><li>比率拉伸工具(R)：拉伸改变素材速度</li><li>添加时间重映射关键帧<br>　(将一个关键帧分开，使之斜线过渡)</li></ul></li><li>对素材右键复制后在另一素材右键粘贴属性<br>　或直接复制粘贴某项属性</li><li>效果列表窗口<ul><li>效果面板中Ctrl多选属性<br>　选中后右键可保存为预设</li><li>GPU加速渲染<br>　支持32位深度<br>　带有YUV的效果</li><li>Warp stabilizer消除抖动</li></ul></li></ul><h2 id="全局"><a href="#全局" class="headerlink" title="全局"></a>全局</h2><ul><li>若窗口标签太多显不出来，<br>　在标签上滚轮可以直接切换查看。</li><li>Ctrl+拖动窗口：使窗口浮动</li><li>~或Shift+~：最大化窗口<br>　再次按键恢复</li><li>I：设置入点<br>　O：设置出点<br>　(在项目面板的图标视图中同样有效)</li><li>项目面板图标视图，点击视频预览，<br>　J为倒放，K为暂停，L为正放，<br>　多次按J或L可加速。<br>　(在修剪监视器等也可使用)</li><li>M添加标记，<br>　Ctrl+Alt+M删除一个标记，<br>　Alt+Shift+M删除所有标记。<br>　再标记面板可快速添加注释。<br>　(标记可修改长度)<br>　Shift+拖动时间线可吸附于标记。</li><li>导出帧Ctrl+Shift+E<br>　一般用于长静止镜头</li></ul><h2 id="声音"><a href="#声音" class="headerlink" title="声音"></a>声音</h2><ul><li>音频右键-音频增益</li><li>旁路为取消声音预览，即禁用特效效果</li><li>利用Audition的频谱频率显示器Shift+D消除明显的噪音</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>PrCC2018若时间线窗口无反应改变一下布局即可</li><li>修剪上一个编辑点到播放指示器  Alt+Q<br>　修剪下一个编辑点到播放指示器  Alt+W<br>　波纹修剪上一个编辑点到播放指示器  Q<br>　波纹修剪下一个编辑点到播放指示器  W</li><li>多机位P28：多摄像机</li></ul><p>　</p><h2 id="思维导图下载"><a href="#思维导图下载" class="headerlink" title="思维导图下载"></a>思维导图下载</h2><ul><li><a href="/sourcefile/[K]Premier快速入门/Primer.pdf">Primer.pdf</a></li><li><a href="/sourcefile/[K]Premier快速入门/Primer.xmind">Primer.xmind</a></li></ul>]]></content>
    
    <summary type="html">
    
      Premier快速入门
    
    </summary>
    
    
    
      <category term="图影设计" scheme="https://mengze.top/tags/%E5%9B%BE%E5%BD%B1%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>【O】加减交替定点原码除法器的FPGA实现</title>
    <link href="https://mengze.top/[O]%E5%8A%A0%E5%87%8F%E4%BA%A4%E6%9B%BF%E5%AE%9A%E7%82%B9%E5%8E%9F%E7%A0%81%E9%99%A4%E6%B3%95%E5%99%A8%E7%9A%84FPGA%E5%AE%9E%E7%8E%B0/"/>
    <id>https://mengze.top/[O]%E5%8A%A0%E5%87%8F%E4%BA%A4%E6%9B%BF%E5%AE%9A%E7%82%B9%E5%8E%9F%E7%A0%81%E9%99%A4%E6%B3%95%E5%99%A8%E7%9A%84FPGA%E5%AE%9E%E7%8E%B0/</id>
    <published>2018-09-30T16:00:00.000Z</published>
    <updated>2020-07-17T13:12:21.313Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>　　<a href="https://github.com/AaronTYin/0-HDL-IC_CurriculumDesign" target="_blank" rel="external">Github：0-HDL-IC_CurriculumDesign</a></p><h2 id="课程设计目的"><a href="#课程设计目的" class="headerlink" title="课程设计目的"></a>课程设计目的</h2><p>　　通过本次课程设计，灵活运用所学知识，掌握不恢复余数加减交替法原码除法器的原理和实现方法，熟悉FPGA的设计和开发过程，在实际操作中找到不足和存在的问题，不断提升自己，进一步学习FPGA的相关操作，使自己在学习和实践中积累更多经验。</p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>　　除法作为四则运算中重要的组成之一，在算数运算中占据重要地位。而除法运算相比于其他运算又具有更加严苛的难度，因此对除法器的深入研究有助于深入理解其他运算的过程和原理。本文对传统的恢复余数除法器电路进行改进，采用一种不恢复余数的加减交替设计方法，设计实现16位定点原码除法器，不仅可以克服恢复余数效率低的缺点，也可以解决运算过程太过复杂等问题，从而在实际电路中使原码除法器的运算速度和面积达到更优。</p><p>　　关键词：除法器；定点原码；不恢复余数法；加减交替；运算速度</p><h2 id="除法器简介"><a href="#除法器简介" class="headerlink" title="除法器简介"></a>除法器简介</h2><p>　　除法是四则运算之一。已知两个因数的积与其中一个非零因数，求另一个因数的运算，叫做除法。 </p><p>　　两个数相除又叫做两个数的比。若ab=c（b≠0）,用积数c和因数b来求另一个因数a的运算就是除法，写作c÷b，读作c除以b（或b除c）。其中，c叫做被除数，b叫做除数，运算的结果a叫做商。</p><p>　　如果除式的商数必须是整数，而除数和被除数并非因数关系的话，会出现相差的数值，其相差（以下的d）为余数。通常不定义除以零这种形式。</p><p>　　长除法俗称「长除」，适用于正式除法、小数除法、多项式除法（即因式分解）等较重视计算过程和商数的除法，过程中兼用了乘法和减法。根据乘法表，两个整数可以用长除法（直式除法）笔算。 如果被除数有分数部分（或者说是小数点），计算时将小数点带下来就可以；如果除数有小数点，将除数与被除数的小数点同时移位，直到除数没有小数点。算盘也可以做除法运算。</p><p>　　短除法俗称「短除」，适用于快速除法、多个整数同步除法（故此常用于求出最大公因数和最小公倍数）、二进位数字转换等较重视倍数测试和质因数（连乘式）的除法，过程大多只需用到九九乘法表及 9 以上少许整数的相乘因数。</p><p>　　带余除法就是带有余数的除法，被除数=除数×商+余数。带余除法主要包括整数的带余除法和多项式的带余除法。其中，整数的带余除法定理为：对于任意的a,b(设a≥b且b≠0)，存在唯一的商q和余数r 使得a=bq+r。多项式的带余除法则与之类似。</p><p>　　定点小数除法：|X|&lt;|Y|，且Y不为0；<br>　　定点整数除法：|X|≥|Y|，且Y不为0。</p><h2 id="恢复余数除法简介"><a href="#恢复余数除法简介" class="headerlink" title="恢复余数除法简介"></a>恢复余数除法简介</h2><p>　　定点原码一位除法器的原理是根据人工进行二进制除法的规则：判断被除数与除数的大小，若被除数小，则上商0，并在余数最低位补0，再用余数和右移一位的除数比，若够除，则上商1，否则上商0。然后继续重复上述步骤，直到除尽（即余数为0）或已得到的商的位数满足精度要求为止。另外，上商0还是1是计算者用观察比较的办法确定的，而计算机只能用做减法判断结果的符号为负还是为正来确定。当差为负时，上商为0，同时还应把除数再加到差上去，恢复余数为原来的正值之后再将其左移一位。若减得的差为0或为正值时，就没有恢复余数的操作，上商为1，余数左移一位。</p><p><strong>设：</strong><br>　　X=X<sub>7</sub>X<sub>6</sub>X<sub>5</sub>X<sub>4</sub>X<sub>3</sub>X<sub>2</sub>X<sub>1</sub>X<sub>0</sub>，Y=Y<sub>7</sub>Y<sub>6</sub>Y<sub>5</sub>Y<sub>4</sub>Y<sub>3</sub>Y<sub>2</sub>Y<sub>1</sub>Y<sub>0</sub>，其中高四位X<sub>7</sub>X<sub>6</sub>X<sub>5</sub>X<sub>4</sub>和Y<sub>7</sub>Y<sub>6</sub>Y<sub>5</sub>Y<sub>4</sub>为符号位，低四位X<sub>3</sub>X<sub>2</sub>X<sub>1</sub>X<sub>0</sub>和Y<sub>3</sub>Y<sub>2</sub>Y<sub>1</sub>Y<sub>0</sub>为数据位。则：XY=K*|X||Y|，其中，|X|和|Y|为X和Y的绝对值，K为X和Y的符号位的异或值。<br>　　|X||Y|利用恢复余数法求的，商根据余数的符号是正或负来判断。当为负时，上商为0，同时还应该把除数再加到差上去，恢复余数为原来的正值之后再左移一位。若差为0或为正值时，就没有恢复余数的操作，上商为1，余数左移一位。</p><p>　　设被除数X=0.1011，除数Y=-0.1101，除法人工计算过程：<br>　　<div style="width:50%;"><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/1.png" alt="dych1"></div><br>　　商：0.10110，余数：0.10110×2<sup>-5</sup>。</p><p>　　人工进行二进制除法的规则：判断被除数与除数的大小，若被除数小，则上商0，并在余数最低位补0，再用余数和右移一位的除数比，若够除，则上商1，否则上商0。然后继续重复上述步骤，直到除尽(即余数为零)或已得到的商的位数满足精度要求为止。</p><p>　　右移除数，可以通过左移被除数(余数)来替代，左移出界的被除数(余数)的高位都是无用的零，对运算不会产生任何影响。另外，上商0还是1是计算者用观察比较的办法确定的，而在计算机中，只能用做减法判结果的符号为负还是为正来确定。</p><p>　　当差为负时上商为0，同时还应把除数再加到差上，恢复余数为原来的正值之后再将其左移一位。若差为正或为0时，没有恢复余数的操作，上商为1，余数左移一位。这种方法称为恢复余数法。</p><p>　　缺点：当某一次-Y的差值为负时，要多做一次+恢复余数的操作，降低了执行速度，又使控制线路变得复杂，因此在计算机中很少采用。</p><p><strong>例：</strong>X=0.1011,Y=0.1101，用恢复余数法求X/Y。<br><strong>解：</strong>[-Y]<sub>补</sub>=11.0011，取双符号位，-Y用+[-Y]<sub>补</sub>取代。<br>　　<img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/2.png" alt="dych2"><br>　　商：X/Y=0.1101，余数=0.0111×2<sup>-4</sup>。</p><p>　　计算机中普遍采用的是不恢复余数的除法方案，称之为加减交替法</p><h2 id="加减交替除法简介"><a href="#加减交替除法简介" class="headerlink" title="加减交替除法简介"></a>加减交替除法简介</h2><p>　　加减交替法是对恢复余数除法的一种修正。当某一次求得的差值(余数Ri)为负时，不是恢复它，而是继续求下一位商，但用加上除数(+Y)的办法来取代(-Y)操作，其他操作依然不变。 </p><p>　　加减交替法的规则如下：<br>　　　　（1）当余数为正时，商上1，求下一位商的办法，是余数左移一位，再减去除数；<br>　　　　（2）当余数为负时，商上0，求下一位商的办法，是余数左移一位，再加上除数。<br>　　此方法不用恢复余数，所以又叫不恢复余数法。但若最后一次上商为0，而又需得到正确余数，则在这最后一次仍需恢复余数。</p><p><strong>例：</strong>X=0.1011,  Y=0.1101，用加减交替法求X/Y。<br><strong>解：</strong>[-Y]<sub>补</sub>=11.0011，取双符号位，-Y用+[-Y]<sub>补</sub>取代。<br>　　<img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/3.png" alt="dych3"><br>商：X/Y=0.1101，余数：0.0111×2<sup>-4</sup>。</p><p><strong>附：补码加减交替除法</strong><br>　　从[X]<sub>补</sub>与[Y]<sub>补</sub>直接求[X/Y]<sub>补</sub>。</p><p>　　补码除法规则比原码除法规则复杂。当除数和被除数用补码表示时，判别是否够减，要比较它们的绝对值的大小</p><p>　　若两数同符号，要用减法，若异号，则要用加法。</p><p>　　对于判断是否够减，及确定本次上商1还是0的规则，还与结果的符号有关。<br>　　当商为正时，商的每一位上的值与原码表示一致；当商为负时，商的各位应是补码形式的值，一般先按各位的反码值上商，除完后，再用在最低位上加1的办法求出正确的补码值。</p><p>　　在被除数的绝对值小于除数的绝对值(即商不溢出)的情况下，补码一位除法的运算规则如下：</p><p>　　 (1)如果被除数与除数同号，用被除数减去除数；<br>　　　　如果被除数与除数异号，用被除数加上除数。<br>　　　　如果所得余数与除数同号上商1，<br>　　　　如果所得余数与除数异号上商0，<br>　　　　该商即为结果的符号位。</p><p> 　　(2)求商的数值部分。<br>　　　　如果上次上商1，将余数左移一位后减去除数；<br>　　　　如果上次上商0，将余数左移一位后加上除数。<br>　　　　如果所得余数与除数同号上商1；<br>　　　　如果所得余数与除数异号上商0。<br>　　　　如此重复执行n-1次(设数值部分n位)。</p><p>　　(3)商的最后一位一般采用恒置1的办法，并省略了最低位+1的操作，此时最大误差为±2-n。如果对商的精度要求较高，则可按规则(2)再进行一次操作并执行加[Y]<sub>补</sub>或加[-Y]<sub>补</sub>恢复余数，以求得商的第n位。<br>　　当除不尽时：若商为正，商的最低位不加1；若商为负，商的最低位加1，使商从反码值变成补码值。<br>　　当能除尽时：若除数为正，商的最低位不加1；若除数为负，商的最低位加1。<br><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/4.png" alt="dych4"><br>　　说明：(1) 表中i=0～n-1。<br>　　　　　(2) 商一般采用末位恒置“1”的方法，操作简便。</p><h2 id="设计方案"><a href="#设计方案" class="headerlink" title="设计方案"></a>设计方案</h2><p>4.1 设计原理<br>　　算法为不恢复余数的加减交替法，包含数据寄存器模块、加法器模块、相反数求补器模块、移位器模块、选择器模块、余数恢复器模块。</p><p><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/5.png" alt="dych5"><br><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/6.png" alt="dych6"></p><p>　　除法开始前，除数的原码放在输入寄存器中。除法开始后，首先用被除数减去除数，若运算结果大于0，商上1。若结果小于0，商上 0。然后被除数左移一位。若商的最后一位为0，需要恢复余数，否则直接输出结果，结束运算。</p><h2 id="建立Verilog模型"><a href="#建立Verilog模型" class="headerlink" title="建立Verilog模型"></a>建立Verilog模型</h2><h3 id="16位寄存器模块"><a href="#16位寄存器模块" class="headerlink" title="16位寄存器模块"></a>16位寄存器模块</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*输入寄存器（16+1位输入，16+2位输出）</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">module</span> ireg(<span class="comment">//output reg [1:0]sign,</span></div><div class="line">                <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">17</span>:<span class="number">0</span>]iregout,</div><div class="line">                <span class="keyword">input</span> [<span class="number">16</span>:<span class="number">0</span>]iregin,</div><div class="line">                <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">begin</span></div><div class="line">    iregout[<span class="number">16</span>:<span class="number">0</span>]&lt;=iregin;</div><div class="line">    iregout[<span class="number">17</span>]&lt;=iregin[<span class="number">16</span>];</div><div class="line">    <span class="comment">//sign[0]&lt;=iregin[16];</span></div><div class="line">    <span class="comment">//sign[1]&lt;=iregin[16];</span></div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span>                   </div><div class="line"></div><div class="line"><span class="comment">/*商寄存器（16+1位输入，16+1位输出）</span></div><div class="line"><span class="comment">（输出商只需要1位符号位，即一共17位）</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">module</span> oreg(<span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">16</span>:<span class="number">0</span>]oregout,</div><div class="line">                <span class="keyword">input</span> [<span class="number">16</span>:<span class="number">0</span>]oregin,</div><div class="line">                <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">begin</span></div><div class="line">    oregout&lt;=oregin;</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span>                   </div><div class="line"></div><div class="line"><span class="comment">/*余数寄存器</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">module</span> remreg();</div><div class="line"><span class="comment">//用加法器替代</span></div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure><p>　　主要用于输入的符号位扩展即寄存功能。</p><p><strong>寄存器模块电路结构：</strong><br><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/7.png" alt="dych7"><br><strong>寄存器模块测试：</strong><br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns/1ps</span></div><div class="line"><span class="keyword">module</span> IC;</div><div class="line"><span class="keyword">wire</span> [<span class="number">17</span>:<span class="number">0</span>]iregout;</div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]oregout;</div><div class="line"><span class="keyword">reg</span> [<span class="number">16</span>:<span class="number">0</span>]iregin;</div><div class="line"><span class="keyword">reg</span> [<span class="number">16</span>:<span class="number">0</span>]oregin;</div><div class="line"><span class="keyword">reg</span> clk;</div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    clk=<span class="number">1'b0</span>;</div><div class="line">    <span class="keyword">forever</span> #<span class="number">10</span> clk=~clk;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    iregin=<span class="number">17'b0_1010_1010_1010_1010</span>;</div><div class="line">    oregin=<span class="number">17'b0_1010_1010_1010_1010</span>;</div><div class="line">    #<span class="number">20</span> iregin=<span class="number">17'b0_1010_1000_1010_1000</span>;</div><div class="line">         oregin=<span class="number">17'b0_1010_1000_1010_1000</span>;</div><div class="line">    #<span class="number">20</span> iregin=<span class="number">17'b1_0000_0001_0000_0001</span>;</div><div class="line">         oregin=<span class="number">17'b1_0000_0001_0000_0001</span>;</div><div class="line">    #<span class="number">20</span> iregin=<span class="number">17'b1_0000_0101_0000_0101</span>;</div><div class="line">         oregin=<span class="number">17'b1_0000_0101_0000_0101</span>;</div><div class="line">    #<span class="number">50</span> <span class="built_in">$stop</span>;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">ireg irA0(iregout,iregin,clk);</div><div class="line">oreg orB0(oregout,oregin,clk);</div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure></p><p><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/8.png" alt="dych8"></p><h3 id="16位加法器模块"><a href="#16位加法器模块" class="headerlink" title="16位加法器模块"></a>16位加法器模块</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">module</span> adder(<span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">17</span>:<span class="number">0</span>]addout,</div><div class="line">                <span class="keyword">output</span> <span class="keyword">reg</span> resone,</div><div class="line">                <span class="keyword">input</span> [<span class="number">17</span>:<span class="number">0</span>]adda,</div><div class="line">                <span class="keyword">input</span> [<span class="number">17</span>:<span class="number">0</span>]addb,</div><div class="line">                <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">begin</span></div><div class="line">    addout=adda+addb;</div><div class="line">    resone=~addout[<span class="number">17</span>];</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure><p><strong>加法器模块电路结构：</strong><br><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/9.png" alt="dych9"><br><strong>加法器模块测试：</strong><br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns/1ps</span></div><div class="line"><span class="keyword">module</span> IC;</div><div class="line"><span class="keyword">wire</span> [<span class="number">17</span>:<span class="number">0</span>]addout;</div><div class="line"><span class="keyword">wire</span> resone;</div><div class="line"><span class="keyword">reg</span> [<span class="number">17</span>:<span class="number">0</span>]adda;</div><div class="line"><span class="keyword">reg</span> [<span class="number">17</span>:<span class="number">0</span>]addb;</div><div class="line"><span class="keyword">reg</span> clk;</div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    clk=<span class="number">1'b0</span>;</div><div class="line">    <span class="keyword">forever</span> #<span class="number">10</span> clk=~clk;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    adda=<span class="number">18'b11_0101_0000_0101_0000</span>;</div><div class="line">    addb=<span class="number">18'b00_0000_0101_0000_0101</span>;</div><div class="line">    #<span class="number">20</span> adda=<span class="number">18'b00_1010_0000_1010_0000</span>;</div><div class="line">         addb=<span class="number">18'b11_0000_1010_0000_1010</span>;</div><div class="line">    #<span class="number">20</span> adda=<span class="number">18'b00_0011_0011_0011_0011</span>;</div><div class="line">         addb=<span class="number">18'b00_1100_1100_1100_1100</span>;</div><div class="line">    #<span class="number">20</span> adda=<span class="number">18'b11_1001_0000_1001_0000</span>;</div><div class="line">         addb=<span class="number">18'b11_0000_1001_0000_1001</span>;</div><div class="line">    #<span class="number">50</span> <span class="built_in">$stop</span>;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">adder add(addout,resone,adda,addb,clk);</div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure></p><p><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/10.png" alt="dych10"></p><h3 id="16位相反数求补器模块"><a href="#16位相反数求补器模块" class="headerlink" title="16位相反数求补器模块"></a>16位相反数求补器模块</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">module</span> complement(<span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">16</span>:<span class="number">0</span>]comout,</div><div class="line">                        <span class="keyword">input</span> [<span class="number">16</span>:<span class="number">0</span>]comin,</div><div class="line">                        <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>]comtmp;</div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">begin</span></div><div class="line">    comtmp[<span class="number">0</span>]=~comin[<span class="number">0</span>];</div><div class="line">    comtmp[<span class="number">1</span>]=~comin[<span class="number">1</span>];</div><div class="line">    comtmp[<span class="number">2</span>]=~comin[<span class="number">2</span>];</div><div class="line">    comtmp[<span class="number">3</span>]=~comin[<span class="number">3</span>];</div><div class="line">    comtmp[<span class="number">4</span>]=~comin[<span class="number">4</span>];</div><div class="line">    comtmp[<span class="number">5</span>]=~comin[<span class="number">5</span>];</div><div class="line">    comtmp[<span class="number">6</span>]=~comin[<span class="number">6</span>];</div><div class="line">    comtmp[<span class="number">7</span>]=~comin[<span class="number">7</span>];</div><div class="line">    comtmp[<span class="number">8</span>]=~comin[<span class="number">8</span>];</div><div class="line">    comtmp[<span class="number">9</span>]=~comin[<span class="number">9</span>];</div><div class="line">    comtmp[<span class="number">10</span>]=~comin[<span class="number">10</span>];</div><div class="line">    comtmp[<span class="number">11</span>]=~comin[<span class="number">11</span>];</div><div class="line">    comtmp[<span class="number">12</span>]=~comin[<span class="number">12</span>];</div><div class="line">    comtmp[<span class="number">13</span>]=~comin[<span class="number">13</span>];</div><div class="line">    comtmp[<span class="number">14</span>]=~comin[<span class="number">14</span>];</div><div class="line">    comtmp[<span class="number">15</span>]=~comin[<span class="number">15</span>];</div><div class="line">    comtmp=comtmp+<span class="number">16'b0000_0000_0000_0001</span>;</div><div class="line">    comout=comtmp;</div><div class="line">    comout[<span class="number">16</span>]=~comin[<span class="number">16</span>];</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure><p><strong>相反数求补器模块测试：</strong><br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns/1ps</span></div><div class="line"><span class="keyword">module</span> IC;</div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]comout;</div><div class="line"><span class="keyword">reg</span> [<span class="number">16</span>:<span class="number">0</span>]comin;</div><div class="line"><span class="keyword">reg</span> clk;</div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    clk=<span class="number">1'b0</span>;</div><div class="line">    <span class="keyword">forever</span> #<span class="number">10</span> clk=~clk;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    comin=<span class="number">17'b1_0000_0101_0000_0101</span>;</div><div class="line">    #<span class="number">20</span> comin=<span class="number">17'b1_1010_0000_1010_0000</span>;</div><div class="line">    #<span class="number">20</span> comin=<span class="number">17'b0_0000_0101_0000_0101</span>;</div><div class="line">    #<span class="number">20</span> comin=<span class="number">17'b0_1010_0000_1010_0000</span>;</div><div class="line">    #<span class="number">50</span> <span class="built_in">$stop</span>;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">complement com(comout,comin,clk);</div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure></p><p><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/11.png" alt="dych11"></p><h3 id="移位器模块"><a href="#移位器模块" class="headerlink" title="移位器模块"></a>移位器模块</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">module</span> shift(<span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">17</span>:<span class="number">0</span>]remout,</div><div class="line">                <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">16</span>:<span class="number">0</span>]resout,</div><div class="line">                <span class="keyword">input</span> [<span class="number">17</span>:<span class="number">0</span>]remin,</div><div class="line">                <span class="keyword">input</span> [<span class="number">16</span>:<span class="number">0</span>]resin,</div><div class="line">                <span class="keyword">input</span> resone,</div><div class="line">                <span class="keyword">input</span> clk);</div><div class="line">                </div><div class="line"><span class="keyword">reg</span> [<span class="number">34</span>:<span class="number">0</span>]shitmp;   <span class="comment">//35=17+18=(16+1)+(16+2)</span></div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">begin</span></div><div class="line">    shitmp[<span class="number">0</span>]=resone;</div><div class="line">    shitmp[<span class="number">16</span>:<span class="number">1</span>]=resin[<span class="number">16</span>:<span class="number">1</span>];</div><div class="line">    shitmp[<span class="number">34</span>:<span class="number">17</span>]=remin[<span class="number">17</span>:<span class="number">0</span>];</div><div class="line">    shitmp=shitmp&lt;&lt;<span class="number">1</span>;</div><div class="line">    resout=shitmp[<span class="number">16</span>:<span class="number">0</span>];</div><div class="line">    remout[<span class="number">17</span>:<span class="number">0</span>]=shitmp[<span class="number">34</span>:<span class="number">17</span>];</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure><p><strong>移位器模块电路结构：</strong><br><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/12.png" alt="dych12"><br><strong>移位器模块测试：</strong><br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns/1ps</span></div><div class="line"><span class="keyword">module</span> IC;</div><div class="line"><span class="keyword">wire</span> [<span class="number">17</span>:<span class="number">0</span>]remout;</div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]resout;</div><div class="line"><span class="keyword">reg</span> [<span class="number">17</span>:<span class="number">0</span>]remin;</div><div class="line"><span class="keyword">reg</span> [<span class="number">16</span>:<span class="number">0</span>]resin;</div><div class="line"><span class="keyword">reg</span> resone;</div><div class="line"><span class="keyword">reg</span> clk;</div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    clk=<span class="number">1'b0</span>;</div><div class="line">    <span class="keyword">forever</span> #<span class="number">10</span> clk=~clk;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">  resone=<span class="number">1'b1</span>;</div><div class="line">    remin=<span class="number">18'b11_0000_0101_0000_0101</span>;</div><div class="line">    resin=<span class="number">17'b1_0000_0101_0000_0101</span>;</div><div class="line">    #<span class="number">20</span> remin=<span class="number">18'b11_1010_0000_1010_0000</span>;</div><div class="line">         resin=<span class="number">17'b1_1010_0000_1010_0000</span>;</div><div class="line">    #<span class="number">20</span> remin=<span class="number">18'b00_1100_1100_1100_1100</span>;</div><div class="line">         resin=<span class="number">17'b0_1100_1100_1100_1100</span>;</div><div class="line">    #<span class="number">20</span> remin=<span class="number">18'b00_1111_0000_1111_0000</span>;</div><div class="line">         resin=<span class="number">17'b0_1111_0000_1111_0000</span>;</div><div class="line">    #<span class="number">50</span> <span class="built_in">$stop</span>;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">shift shi(remout,resout,remin,resin,resone,clk);</div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure></p><p><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/13.png" alt="dych13"></p><h3 id="选择器模块"><a href="#选择器模块" class="headerlink" title="选择器模块"></a>选择器模块</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">module</span> chose(<span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">17</span>:<span class="number">0</span>]choout,</div><div class="line">                <span class="keyword">input</span> [<span class="number">16</span>:<span class="number">0</span>]choin,</div><div class="line">                <span class="keyword">input</span> resreg,</div><div class="line">                <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>]chotmp;</div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">begin</span></div><div class="line">    <span class="keyword">if</span>(!resreg)</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        choout[<span class="number">16</span>:<span class="number">0</span>]=choin;</div><div class="line">        choout[<span class="number">17</span>]=choin[<span class="number">16</span>];</div><div class="line">    <span class="keyword">end</span></div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(resreg)</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        chotmp[<span class="number">0</span>]=~choin[<span class="number">0</span>];</div><div class="line">        chotmp[<span class="number">1</span>]=~choin[<span class="number">1</span>];</div><div class="line">        chotmp[<span class="number">2</span>]=~choin[<span class="number">2</span>];</div><div class="line">        chotmp[<span class="number">3</span>]=~choin[<span class="number">3</span>];</div><div class="line">        chotmp[<span class="number">4</span>]=~choin[<span class="number">4</span>];</div><div class="line">        chotmp[<span class="number">5</span>]=~choin[<span class="number">5</span>];</div><div class="line">        chotmp[<span class="number">6</span>]=~choin[<span class="number">6</span>];</div><div class="line">        chotmp[<span class="number">7</span>]=~choin[<span class="number">7</span>];</div><div class="line">        chotmp[<span class="number">8</span>]=~choin[<span class="number">8</span>];</div><div class="line">        chotmp[<span class="number">9</span>]=~choin[<span class="number">9</span>];</div><div class="line">        chotmp[<span class="number">10</span>]=~choin[<span class="number">10</span>];</div><div class="line">        chotmp[<span class="number">11</span>]=~choin[<span class="number">11</span>];</div><div class="line">        chotmp[<span class="number">12</span>]=~choin[<span class="number">12</span>];</div><div class="line">        chotmp[<span class="number">13</span>]=~choin[<span class="number">13</span>];</div><div class="line">        chotmp[<span class="number">14</span>]=~choin[<span class="number">14</span>];</div><div class="line">        chotmp[<span class="number">15</span>]=~choin[<span class="number">15</span>];</div><div class="line">        chotmp=chotmp+<span class="number">16'b0000_0000_0000_0001</span>;</div><div class="line">        choout[<span class="number">15</span>:<span class="number">0</span>]=chotmp;</div><div class="line">        choout[<span class="number">16</span>]=~choin[<span class="number">16</span>];</div><div class="line">        choout[<span class="number">17</span>]=~choin[<span class="number">16</span>];</div><div class="line">    <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure><p><strong>选择器模块电路结构：</strong><br><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/14.png" alt="dych14"><br><strong>选择器模块测试：</strong><br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns/1ps</span></div><div class="line"><span class="keyword">module</span> IC;</div><div class="line"><span class="keyword">wire</span> [<span class="number">17</span>:<span class="number">0</span>]choout;</div><div class="line"><span class="keyword">reg</span> [<span class="number">17</span>:<span class="number">0</span>]choin;</div><div class="line"><span class="keyword">reg</span> resreg;</div><div class="line"><span class="keyword">reg</span> clk;</div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    clk=<span class="number">1'b0</span>;</div><div class="line">    <span class="keyword">forever</span> #<span class="number">10</span> clk=~clk;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    resreg=<span class="number">1'b0</span>;</div><div class="line">    choin=<span class="number">18'b11_0000_0101_0000_0101</span>;</div><div class="line">    #<span class="number">20</span> resreg=<span class="number">1'b0</span>;</div><div class="line">         choin=<span class="number">18'b11_1010_0000_1010_0000</span>;</div><div class="line">    #<span class="number">20</span> resreg=<span class="number">1'b1</span>;</div><div class="line">         choin=<span class="number">18'b00_0000_0101_0000_0101</span>;</div><div class="line">    #<span class="number">20</span> resreg=<span class="number">1'b1</span>;</div><div class="line">         choin=<span class="number">18'b00_1010_0000_1010_0000</span>;</div><div class="line">    #<span class="number">50</span> <span class="built_in">$stop</span>;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">chose cho(choout,choin,resreg,clk);</div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure></p><p><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/15.png" alt="dych15"></p><h3 id="恢复余数模块"><a href="#恢复余数模块" class="headerlink" title="恢复余数模块"></a>恢复余数模块</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">module</span> remrec(<span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">17</span>:<span class="number">0</span>]rrout,</div><div class="line">                <span class="keyword">input</span> [<span class="number">17</span>:<span class="number">0</span>]rrina,</div><div class="line">                <span class="keyword">input</span> [<span class="number">17</span>:<span class="number">0</span>]rrinb,</div><div class="line">                <span class="keyword">input</span> rrreg,</div><div class="line">                <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">if</span>(!rrreg)</div><div class="line">    rrout=rrina+rrinb;</div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure><p><strong>恢复余数模块电路结构：</strong><br><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/16.png" alt="dych16"><br><strong>恢复余数模块测试：</strong><br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns/1ps</span></div><div class="line"><span class="keyword">module</span> IC;</div><div class="line"><span class="keyword">wire</span> [<span class="number">17</span>:<span class="number">0</span>]rrout;</div><div class="line"><span class="keyword">reg</span> [<span class="number">17</span>:<span class="number">0</span>]rrina;</div><div class="line"><span class="keyword">reg</span> [<span class="number">17</span>:<span class="number">0</span>]rrinb;</div><div class="line"><span class="keyword">reg</span> rrreg;</div><div class="line"><span class="keyword">reg</span> clk;</div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    clk=<span class="number">1'b0</span>;</div><div class="line">    <span class="keyword">forever</span> #<span class="number">10</span> clk=~clk;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    rrreg=<span class="number">1'b0</span>;</div><div class="line">    rrina=<span class="number">18'b11_0000_0101_0000_0101</span>;</div><div class="line">    rrinb=<span class="number">18'b11_1010_0000_1010_0000</span>;</div><div class="line">    #<span class="number">20</span> rrreg=<span class="number">1'b0</span>;</div><div class="line">         rrina=<span class="number">18'b11_1010_0000_1010_0000</span>;</div><div class="line">         rrinb=<span class="number">18'b00_0000_0101_0000_0101</span>;</div><div class="line">    #<span class="number">20</span> rrreg=<span class="number">1'b1</span>;</div><div class="line">         rrina=<span class="number">18'b00_0000_0101_0000_0101</span>;</div><div class="line">         rrinb=<span class="number">18'b11_1010_0000_1010_0000</span>;</div><div class="line">    #<span class="number">20</span> rrreg=<span class="number">1'b1</span>;</div><div class="line">         rrina=<span class="number">18'b00_1010_0000_1010_0000</span>;</div><div class="line">         rrinb=<span class="number">18'b00_0000_0101_0000_0101</span>;</div><div class="line">    #<span class="number">50</span> <span class="built_in">$stop</span>;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">remrec rr(rrout,rrina,rrinb,rrreg,clk);</div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure></p><p><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/17.png" alt="dych17"></p><h3 id="测试模块"><a href="#测试模块" class="headerlink" title="测试模块"></a>测试模块</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1 ns/ 1 ps</span></div><div class="line"><span class="keyword">module</span> IC;</div><div class="line"><span class="keyword">reg</span> clk;</div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]dividend;</div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]divisor;</div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]remainder;</div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]result;</div><div class="line"></div><div class="line">IC_CDesign i1(</div><div class="line">    <span class="variable">.clk</span>(clk),</div><div class="line">    <span class="variable">.dividend</span>(dividend),</div><div class="line">    <span class="variable">.divisor</span>(divisor),</div><div class="line">    <span class="variable">.remainder</span>(remainder),</div><div class="line">    <span class="variable">.result</span>(result));</div><div class="line"></div><div class="line"><span class="keyword">always</span> </div><div class="line">    #<span class="number">10</span> clk=~clk;</div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    clk=<span class="number">0</span>;</div><div class="line">    <span class="comment">//dividend=17'b0_1010_0000_1010_0000;</span></div><div class="line">    <span class="comment">//divisor=17'b0_0001_1010_0001_1010;</span></div><div class="line">    #<span class="number">1000</span> <span class="built_in">$stop</span>;</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure><h2 id="功能仿真"><a href="#功能仿真" class="headerlink" title="功能仿真"></a>功能仿真</h2><p>　　功能仿真是验证所设计的Verilog模型的功能是否正确和符合要求，不涉及设计实现后实际电路的时延等问题。利用Modelsim仿真工具对不恢复余数加减交替的16位定点原码除法器的Verilog模型进行功能仿真。</p><p>　　具体仿真波形图如下图所示，图中形象的显示了被除数与除数、初始标志位、商和余数的数值波形。此外可以将过程各项展开，便可观察到整个除法器的运算流程及各模块的过程数值。</p><p>仿真波形图<br><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/18.png" alt="dych18"><br><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/19.png" alt="dych19"></p><p>通过上图可知各组数据的测试结果如下所示：<br>被除数：0_1010_0000_1010_0000，<br>除数：0_0001_1010_0001_1010，<br>商：1_1100_0110_1110_0000，<br>余数：1_0000_1101_0100_0000。</p><h2 id="逻辑综合"><a href="#逻辑综合" class="headerlink" title="逻辑综合"></a>逻辑综合</h2><p>　　逻辑综合是将硬件描述语言描述的设计输入转换成与或非门、触发器、存储器等基本元件的连接关系，根据约束条件对生成的门级逻辑连接进行优化，生成为下一步实现所利用的网表文件。<br>经过优化后，16位定点原码除法器模块的RTL Viewer图如下图所示：</p><p>16位定点原码除法器模块RTL_Viewer图<br><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/20.png" alt="dych20"></p><p>用QuartusII进行逻辑综合，进行分配引脚，具体如下图所示。之后便可以在FPGA开发板上进行逻辑综合。</p><p>引脚分配图<br><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/21.png" alt="dych21"></p><p><strong>综合结果：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">Flow Status Successful - Wed Oct 10 14:47:01 2018</div><div class="line">Quartus II 64-Bit Version   13.0.0 Build 156 04/24/2013 SJ Full Version</div><div class="line">Revision Name   IC_CDesign</div><div class="line">Top-level Entity Name   IC_CDesign</div><div class="line">Family  Cyclone</div><div class="line">Device  EP1C12Q240C8</div><div class="line">Timing Models   Final</div><div class="line">Total logic elements    1,369 / 12,060 ( 11 % )</div><div class="line">Total pins  69 / 173 ( 40 % )</div><div class="line">Total virtual pins  0</div><div class="line">Total memory bits   139,264 / 239,616 ( 58 % )</div><div class="line">Total PLLs  0 / 2 ( 0 % )</div></pre></td></tr></table></figure></p><pre><code>下载到开发板，用QuartusII的SignalTapII进行硬件测试，传回的数据波形与用Modelsim仿真的数据一致，硬件测试正确。</code></pre><p><img src="/sourcefile/[O]加减交替定点原码除法器的FPGA实现/22.png" alt="dych22"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>　　本文对16位不恢复余数加减交替法定点原码除法器进行了设计，掌握了16位定点原码除法器的原理和设计方法，并通过Verilog和QuartusII对该除法器进行功能仿真和逻辑综合，对整个设计和验证过程有了更深刻的理解。通过本次课程设计也明确了16位不恢复余数加减交替法定点原码除法器具有速度快，电路结构简单，占用面积小，带负载能力强的特点，而与16位恢复余数定点原码除法器相比，本文的除法器在实际电路中运算速度和面积可以达到更优。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p>[1]胡乃平 曲英杰 周艳平编著. 计算机组成与结构 —北京：清华大学出版社.2011.10<br>[2]曲英杰 方卓红编著.超大规模集成电路设计 —北京：人民邮电出版社.2015.2<br>[3]袁春风编著. 计算机组成与系统结构 —北京：清华大学出版社.2010.4<br>[4]李亚民编著. 计算机组成与系统结构 —北京：清华大学出版社.2000年<br>[5]夏宇闻. 译.Verilog HDL 数字设计与综合[M].2版.北京:电子工业出版社,2004年</p></blockquote><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p><strong>16位不恢复余数加减交替定点原码除法器模块：</strong><br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*顶层模块</span></div><div class="line"><span class="comment">//divisor除数</span></div><div class="line"><span class="comment">//dividend被除数</span></div><div class="line"><span class="comment">//result商</span></div><div class="line"><span class="comment">//remainder余数</span></div><div class="line"><span class="comment">//sign符号</span></div><div class="line"><span class="comment">//clk时钟信号</span></div><div class="line"><span class="comment">32-&gt;16-&gt;8-&gt;4;33-&gt;17-&gt;9-&gt;5;</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">module</span> IC_CDesign(<span class="comment">//output [1:0]sign,   //两个1位符号位</span></div><div class="line">                        <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">16</span>:<span class="number">0</span>]remainder, <span class="comment">//16是最高位</span></div><div class="line">                        <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">16</span>:<span class="number">0</span>]result,</div><div class="line">                        <span class="keyword">output</span> [<span class="number">16</span>:<span class="number">0</span>]dividend,</div><div class="line">                        <span class="keyword">output</span> [<span class="number">16</span>:<span class="number">0</span>]divisor,</div><div class="line">                        <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]dividendori=<span class="number">17'b0_1010_0000_1010_0000</span>;</div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]divisorori=<span class="number">17'b0_0001_1010_0001_1010</span>;</div><div class="line"><span class="keyword">assign</span> dividend=dividendori;</div><div class="line"><span class="keyword">assign</span> divisor=divisorori; <span class="keyword">wire</span> [<span class="number">17</span>:<span class="number">0</span>]dividendtmp;</div><div class="line"><span class="keyword">wire</span> [<span class="number">17</span>:<span class="number">0</span>]divisortmp[<span class="number">16</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">wire</span> [<span class="number">17</span>:<span class="number">0</span>]remaindertmp[<span class="number">17</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">wire</span> [<span class="number">17</span>:<span class="number">0</span>]remaindershitmp[<span class="number">15</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]resulttmp[<span class="number">17</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">assign</span> resulttmp[<span class="number">0</span>]=<span class="number">17'b0_0000_0000_0000_0000</span>;</div><div class="line"><span class="keyword">wire</span> resone[<span class="number">17</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">assign</span> resone[<span class="number">0</span>]=<span class="number">1'b1</span>;  <span class="comment">//首次操作为减除数</span></div><div class="line"></div><div class="line">ireg irA0(dividendtmp,dividendori,clk);</div><div class="line">chose choB1(divisortmp[<span class="number">0</span>],divisorori,resone[<span class="number">0</span>],clk);</div><div class="line">adder addA1(remaindertmp[<span class="number">0</span>],resone[<span class="number">1</span>],dividendtmp,divisortmp[<span class="number">0</span>],clk);</div><div class="line">shift shiA1(remaindershitmp[<span class="number">0</span>],resulttmp[<span class="number">1</span>],remaindertmp[<span class="number">0</span>],resulttmp[<span class="number">0</span>],resone[<span class="number">1</span>],clk);</div><div class="line"></div><div class="line">chose choB2(divisortmp[<span class="number">1</span>],divisor,resone[<span class="number">1</span>],clk);</div><div class="line">adder addA2(remaindertmp[<span class="number">1</span>],resone[<span class="number">2</span>],remaindershitmp[<span class="number">0</span>],divisortmp[<span class="number">1</span>],clk);</div><div class="line">shift shiA2(remaindershitmp[<span class="number">1</span>],resulttmp[<span class="number">2</span>],remaindertmp[<span class="number">1</span>],resulttmp[<span class="number">1</span>],resone[<span class="number">2</span>],clk);</div><div class="line"></div><div class="line">chose choB3(divisortmp[<span class="number">2</span>],divisor,resone[<span class="number">2</span>],clk);</div><div class="line">adder addA3(remaindertmp[<span class="number">2</span>],resone[<span class="number">3</span>],remaindershitmp[<span class="number">1</span>],divisortmp[<span class="number">2</span>],clk);</div><div class="line">shift shiA3(remaindershitmp[<span class="number">2</span>],resulttmp[<span class="number">3</span>],remaindertmp[<span class="number">2</span>],resulttmp[<span class="number">2</span>],resone[<span class="number">3</span>],clk);</div><div class="line"></div><div class="line">chose choB4(divisortmp[<span class="number">3</span>],divisor,resone[<span class="number">3</span>],clk);</div><div class="line">adder addA4(remaindertmp[<span class="number">3</span>],resone[<span class="number">4</span>],remaindershitmp[<span class="number">2</span>],divisortmp[<span class="number">3</span>],clk);</div><div class="line">shift shiA4(remaindershitmp[<span class="number">3</span>],resulttmp[<span class="number">4</span>],remaindertmp[<span class="number">3</span>],resulttmp[<span class="number">3</span>],resone[<span class="number">4</span>],clk);</div><div class="line"></div><div class="line">chose choB5(divisortmp[<span class="number">4</span>],divisor,resone[<span class="number">4</span>],clk);</div><div class="line">adder addA5(remaindertmp[<span class="number">4</span>],resone[<span class="number">5</span>],remaindershitmp[<span class="number">3</span>],divisortmp[<span class="number">4</span>],clk);</div><div class="line">shift shiA5(remaindershitmp[<span class="number">4</span>],resulttmp[<span class="number">5</span>],remaindertmp[<span class="number">4</span>],resulttmp[<span class="number">4</span>],resone[<span class="number">5</span>],clk);</div><div class="line"></div><div class="line">chose choB6(divisortmp[<span class="number">5</span>],divisor,resone[<span class="number">5</span>],clk);</div><div class="line">adder addA6(remaindertmp[<span class="number">5</span>],resone[<span class="number">6</span>],remaindershitmp[<span class="number">4</span>],divisortmp[<span class="number">5</span>],clk);</div><div class="line">shift shiA6(remaindershitmp[<span class="number">5</span>],resulttmp[<span class="number">6</span>],remaindertmp[<span class="number">5</span>],resulttmp[<span class="number">5</span>],resone[<span class="number">6</span>],clk);</div><div class="line"></div><div class="line">chose choB7(divisortmp[<span class="number">6</span>],divisor,resone[<span class="number">6</span>],clk);</div><div class="line">adder addA7(remaindertmp[<span class="number">6</span>],resone[<span class="number">7</span>],remaindershitmp[<span class="number">5</span>],divisortmp[<span class="number">6</span>],clk);</div><div class="line">shift shiA7(remaindershitmp[<span class="number">6</span>],resulttmp[<span class="number">7</span>],remaindertmp[<span class="number">6</span>],resulttmp[<span class="number">6</span>],resone[<span class="number">7</span>],clk);</div><div class="line"></div><div class="line">chose choB8(divisortmp[<span class="number">7</span>],divisor,resone[<span class="number">7</span>],clk);</div><div class="line">adder addA8(remaindertmp[<span class="number">7</span>],resone[<span class="number">8</span>],remaindershitmp[<span class="number">6</span>],divisortmp[<span class="number">7</span>],clk);</div><div class="line">shift shiA8(remaindershitmp[<span class="number">7</span>],resulttmp[<span class="number">8</span>],remaindertmp[<span class="number">7</span>],resulttmp[<span class="number">7</span>],resone[<span class="number">8</span>],clk);</div><div class="line"></div><div class="line">chose choB9(divisortmp[<span class="number">8</span>],divisor,resone[<span class="number">8</span>],clk);</div><div class="line">adder addA9(remaindertmp[<span class="number">8</span>],resone[<span class="number">9</span>],remaindershitmp[<span class="number">7</span>],divisortmp[<span class="number">8</span>],clk);</div><div class="line">shift shiA9(remaindershitmp[<span class="number">8</span>],resulttmp[<span class="number">9</span>],remaindertmp[<span class="number">8</span>],resulttmp[<span class="number">8</span>],resone[<span class="number">9</span>],clk);</div><div class="line"></div><div class="line">chose choB10(divisortmp[<span class="number">9</span>],divisor,resone[<span class="number">9</span>],clk);</div><div class="line">adder addA10(remaindertmp[<span class="number">9</span>],resone[<span class="number">10</span>],remaindershitmp[<span class="number">8</span>],divisortmp[<span class="number">9</span>],clk);</div><div class="line">shift shiA10(remaindershitmp[<span class="number">9</span>],resulttmp[<span class="number">10</span>],remaindertmp[<span class="number">9</span>],resulttmp[<span class="number">9</span>],resone[<span class="number">10</span>],clk);</div><div class="line"></div><div class="line">chose choB11(divisortmp[<span class="number">10</span>],divisor,resone[<span class="number">10</span>],clk);</div><div class="line">adder addA11(remaindertmp[<span class="number">10</span>],resone[<span class="number">11</span>],remaindershitmp[<span class="number">9</span>],divisortmp[<span class="number">10</span>],clk);</div><div class="line">shift shiA11(remaindershitmp[<span class="number">10</span>],resulttmp[<span class="number">11</span>],remaindertmp[<span class="number">10</span>],resulttmp[<span class="number">10</span>],resone[<span class="number">11</span>],clk);</div><div class="line"></div><div class="line">chose choB12(divisortmp[<span class="number">11</span>],divisor,resone[<span class="number">11</span>],clk);</div><div class="line">adder addA12(remaindertmp[<span class="number">11</span>],resone[<span class="number">12</span>],remaindershitmp[<span class="number">10</span>],divisortmp[<span class="number">11</span>],clk);</div><div class="line">shift shiA12(remaindershitmp[<span class="number">11</span>],resulttmp[<span class="number">12</span>],remaindertmp[<span class="number">11</span>],resulttmp[<span class="number">11</span>],resone[<span class="number">12</span>],clk);</div><div class="line"></div><div class="line">chose choB13(divisortmp[<span class="number">12</span>],divisor,resone[<span class="number">12</span>],clk);</div><div class="line">adder addA13(remaindertmp[<span class="number">12</span>],resone[<span class="number">13</span>],remaindershitmp[<span class="number">11</span>],divisortmp[<span class="number">12</span>],clk);</div><div class="line">shift shiA13(remaindershitmp[<span class="number">12</span>],resulttmp[<span class="number">13</span>],remaindertmp[<span class="number">12</span>],resulttmp[<span class="number">12</span>],resone[<span class="number">13</span>],clk);</div><div class="line"></div><div class="line">chose choB14(divisortmp[<span class="number">13</span>],divisor,resone[<span class="number">13</span>],clk);</div><div class="line">adder addA14(remaindertmp[<span class="number">13</span>],resone[<span class="number">14</span>],remaindershitmp[<span class="number">12</span>],divisortmp[<span class="number">13</span>],clk);</div><div class="line">shift shiA14(remaindershitmp[<span class="number">13</span>],resulttmp[<span class="number">14</span>],remaindertmp[<span class="number">13</span>],resulttmp[<span class="number">13</span>],resone[<span class="number">14</span>],clk);</div><div class="line"></div><div class="line">chose choB15(divisortmp[<span class="number">14</span>],divisor,resone[<span class="number">14</span>],clk);</div><div class="line">adder addA15(remaindertmp[<span class="number">14</span>],resone[<span class="number">15</span>],remaindershitmp[<span class="number">13</span>],divisortmp[<span class="number">14</span>],clk);</div><div class="line">shift shiA15(remaindershitmp[<span class="number">14</span>],resulttmp[<span class="number">15</span>],remaindertmp[<span class="number">14</span>],resulttmp[<span class="number">14</span>],resone[<span class="number">15</span>],clk);</div><div class="line"></div><div class="line">chose choB16(divisortmp[<span class="number">15</span>],divisor,resone[<span class="number">15</span>],clk);</div><div class="line">adder addA16(remaindertmp[<span class="number">15</span>],resone[<span class="number">16</span>],remaindershitmp[<span class="number">14</span>],divisortmp[<span class="number">15</span>],clk);</div><div class="line">shift shiA16(remaindershitmp[<span class="number">15</span>],resulttmp[<span class="number">16</span>],remaindertmp[<span class="number">15</span>],resulttmp[<span class="number">15</span>],resone[<span class="number">16</span>],clk);</div><div class="line"></div><div class="line"></div><div class="line">chose choB17(divisortmp[<span class="number">16</span>],divisor,resone[<span class="number">16</span>],clk);</div><div class="line">adder addA17(remaindertmp[<span class="number">16</span>],resone[<span class="number">17</span>],remaindershitmp[<span class="number">15</span>],divisortmp[<span class="number">16</span>],clk);</div><div class="line"><span class="keyword">assign</span> resulttmp[<span class="number">17</span>]=resulttmp[<span class="number">16</span>]+resone[<span class="number">17</span>];</div><div class="line">remrec rr(remaindertmp[<span class="number">17</span>],remaindertmp[<span class="number">16</span>],divisortmp[<span class="number">16</span>],resone[<span class="number">17</span>],clk);</div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">begin</span></div><div class="line">    result=resulttmp[<span class="number">17</span>];</div><div class="line">    <span class="keyword">if</span>(resone[<span class="number">17</span>])          <span class="comment">//如果最后一位商为1，则不恢复余数，否则恢复余数</span></div><div class="line">        remainder=remaindertmp[<span class="number">16</span>];</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!resone[<span class="number">17</span>])</div><div class="line">        remainder=remaindertmp[<span class="number">17</span>];</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure></p><p><strong>测试模块：</strong><br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*激励</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1 ns/ 1 ps</span></div><div class="line"><span class="keyword">module</span> IC;</div><div class="line"><span class="keyword">reg</span> clk;</div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]dividend;</div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]divisor;</div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]remainder;</div><div class="line"><span class="keyword">wire</span> [<span class="number">16</span>:<span class="number">0</span>]result;</div><div class="line"></div><div class="line">IC_CDesign i1(</div><div class="line">    <span class="variable">.clk</span>(clk),</div><div class="line">    <span class="variable">.dividend</span>(dividend),</div><div class="line">    <span class="variable">.divisor</span>(divisor),</div><div class="line">    <span class="variable">.remainder</span>(remainder),</div><div class="line">    <span class="variable">.result</span>(result));</div><div class="line"></div><div class="line"><span class="keyword">always</span> </div><div class="line">    #<span class="number">10</span> clk=~clk;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    clk=<span class="number">0</span>;</div><div class="line">    <span class="comment">//dividend=17'b0_1010_0000_1010_0000;</span></div><div class="line">    <span class="comment">//divisor=17'b0_0001_1010_0001_1010;</span></div><div class="line">    #<span class="number">1000</span> <span class="built_in">$stop</span>;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      加减交替定点原码除法器的FPGA实现
    
    </summary>
    
    
    
      <category term="FPGA" scheme="https://mengze.top/tags/FPGA/"/>
    
  </entry>
  
  <entry>
    <title>【O】定点原码二位乘法器的FPGA实现</title>
    <link href="https://mengze.top/[O]%E5%AE%9A%E7%82%B9%E5%8E%9F%E7%A0%81%E4%BA%8C%E4%BD%8D%E4%B9%98%E6%B3%95%E5%99%A8%E7%9A%84FPGA%E5%AE%9E%E7%8E%B0/"/>
    <id>https://mengze.top/[O]%E5%AE%9A%E7%82%B9%E5%8E%9F%E7%A0%81%E4%BA%8C%E4%BD%8D%E4%B9%98%E6%B3%95%E5%99%A8%E7%9A%84FPGA%E5%AE%9E%E7%8E%B0/</id>
    <published>2018-09-30T16:00:00.000Z</published>
    <updated>2020-07-21T13:17:13.613Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>　　<a href="https://github.com/AaronTYin/0-HDL-OTM" target="_blank" rel="external">Github：0-HDL-OTM</a><br>　　<a href="https://mengze.top/[O]原码二位乘法器的FPGA实现/#7位">7位</a> | <a href="https://mengze.top/[O]原码二位乘法器的FPGA实现/#17位">17位</a> | <a href="https://mengze.top/[O]原码二位乘法器的FPGA实现/#33位">33位</a> | <a href="https://mengze.top/[O]原码二位乘法器的FPGA实现/#激励块">激励块</a></p><h2 id="7位"><a href="#7位" class="headerlink" title="7位"></a>7位</h2><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">module</span> BFI7(<span class="keyword">output</span> [<span class="number">12</span>:<span class="number">0</span>]result,</div><div class="line">    <span class="keyword">inout</span> [<span class="number">6</span>:<span class="number">0</span>]x,</div><div class="line">    <span class="keyword">inout</span> [<span class="number">6</span>:<span class="number">0</span>]y,</div><div class="line">    <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">wire</span> [<span class="number">8</span>:<span class="number">0</span>]xtmp;</div><div class="line"><span class="keyword">assign</span> xtmp[<span class="number">6</span>:<span class="number">0</span>]=x;</div><div class="line"><span class="keyword">assign</span> xtmp[<span class="number">7</span>]=x[<span class="number">6</span>];</div><div class="line"><span class="keyword">assign</span> xtmp[<span class="number">8</span>]=x[<span class="number">6</span>];</div><div class="line"><span class="keyword">wire</span> [<span class="number">8</span>:<span class="number">0</span>]prtmp[<span class="number">3</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">wire</span> [<span class="number">5</span>:<span class="number">0</span>]ytmp[<span class="number">3</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">wire</span> ctmp[<span class="number">3</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">wire</span> [<span class="number">14</span>:<span class="number">0</span>]restmp;</div><div class="line"></div><div class="line"><span class="keyword">assign</span> x=<span class="number">7'b0_10_0111</span>;</div><div class="line"><span class="keyword">assign</span> y=<span class="number">7'b0_10_0111</span>;</div><div class="line"></div><div class="line"><span class="keyword">assign</span> prtmp[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line"><span class="keyword">assign</span> ytmp[<span class="number">0</span>]=y[<span class="number">5</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">assign</span> ctmp[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line"></div><div class="line"></div><div class="line">cho c1(prtmp[<span class="number">1</span>],ytmp[<span class="number">1</span>],ctmp[<span class="number">1</span>],ctmp[<span class="number">0</span>],prtmp[<span class="number">0</span>],xtmp,ytmp[<span class="number">0</span>],clk);</div><div class="line">cho c2(prtmp[<span class="number">2</span>],ytmp[<span class="number">2</span>],ctmp[<span class="number">2</span>],ctmp[<span class="number">1</span>],prtmp[<span class="number">1</span>],xtmp,ytmp[<span class="number">1</span>],clk);</div><div class="line">cho c3(prtmp[<span class="number">3</span>],ytmp[<span class="number">3</span>],ctmp[<span class="number">3</span>],ctmp[<span class="number">2</span>],prtmp[<span class="number">2</span>],xtmp,ytmp[<span class="number">2</span>],clk);</div><div class="line">resch rc(result,ytmp[<span class="number">3</span>],prtmp[<span class="number">3</span>],ctmp[<span class="number">3</span>],clk);</div><div class="line"></div><div class="line"><span class="keyword">endmodule</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">module</span> resch(<span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">12</span>:<span class="number">0</span>]result,</div><div class="line">                <span class="keyword">input</span> [<span class="number">5</span>:<span class="number">0</span>]yt,</div><div class="line">                <span class="keyword">input</span> [<span class="number">8</span>:<span class="number">0</span>]prt,</div><div class="line">                <span class="keyword">input</span> ct,</div><div class="line">                <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">reg</span> [<span class="number">14</span>:<span class="number">0</span>]restmp;</div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">begin</span></div><div class="line">    restmp[<span class="number">5</span>:<span class="number">0</span>]=yt;</div><div class="line">    restmp[<span class="number">14</span>:<span class="number">6</span>]=prt;</div><div class="line">    result=restmp[<span class="number">12</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">module</span> cho(<span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">8</span>:<span class="number">0</span>]prout,</div><div class="line">            <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">0</span>]yout,</div><div class="line">            <span class="keyword">output</span> <span class="keyword">reg</span> cout,</div><div class="line">            <span class="keyword">input</span> cin,</div><div class="line">            <span class="keyword">input</span> [<span class="number">8</span>:<span class="number">0</span>]prin,</div><div class="line">            <span class="keyword">input</span> [<span class="number">8</span>:<span class="number">0</span>]x,</div><div class="line">            <span class="keyword">input</span> [<span class="number">5</span>:<span class="number">0</span>]yin,</div><div class="line">            <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">reg</span> [<span class="number">8</span>:<span class="number">0</span>]prtmp;</div><div class="line"><span class="keyword">reg</span> [<span class="number">14</span>:<span class="number">0</span>]pry;</div><div class="line"><span class="keyword">reg</span> [<span class="number">8</span>:<span class="number">0</span>]opx;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">begin</span></div><div class="line">    opx[<span class="number">0</span>]=~x[<span class="number">0</span>];</div><div class="line">    opx[<span class="number">1</span>]=~x[<span class="number">1</span>];</div><div class="line">    opx[<span class="number">2</span>]=~x[<span class="number">2</span>];</div><div class="line">    opx[<span class="number">3</span>]=~x[<span class="number">3</span>];</div><div class="line">    opx[<span class="number">4</span>]=~x[<span class="number">4</span>];</div><div class="line">    opx[<span class="number">5</span>]=~x[<span class="number">5</span>];</div><div class="line">    opx=opx+<span class="number">6'b00_0001</span>;</div><div class="line">    opx[<span class="number">6</span>]=~x[<span class="number">6</span>];</div><div class="line">    opx[<span class="number">7</span>]=~x[<span class="number">6</span>];</div><div class="line">    opx[<span class="number">8</span>]=~x[<span class="number">6</span>];</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(!yin[<span class="number">1</span>])</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span>(!yin[<span class="number">0</span>])</div><div class="line">        <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span>(!cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin; <span class="comment">//suanfa</span></div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">5</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">14</span>:<span class="number">6</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">14</span>]=cout;</div><div class="line">                pry[<span class="number">13</span>]=cout;</div><div class="line">                yout=pry[<span class="number">5</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">14</span>:<span class="number">6</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">            <span class="keyword">if</span>(cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+x;</div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">5</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">14</span>:<span class="number">6</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">14</span>]=cout;</div><div class="line">                pry[<span class="number">13</span>]=cout;</div><div class="line">                yout=pry[<span class="number">5</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">14</span>:<span class="number">6</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">        <span class="keyword">end</span></div><div class="line">        <span class="keyword">if</span>(yin[<span class="number">0</span>])</div><div class="line">        <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span>(!cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+x;</div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">5</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">14</span>:<span class="number">6</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">14</span>]=cout;</div><div class="line">                pry[<span class="number">13</span>]=cout;</div><div class="line">                yout=pry[<span class="number">5</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">14</span>:<span class="number">6</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">            <span class="keyword">if</span>(cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+(<span class="number">2</span>*x);</div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">5</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">14</span>:<span class="number">6</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">14</span>]=cout;</div><div class="line">                pry[<span class="number">13</span>]=cout;</div><div class="line">                yout=pry[<span class="number">5</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">14</span>:<span class="number">6</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">        <span class="keyword">end</span></div><div class="line">    <span class="keyword">end</span></div><div class="line">    <span class="keyword">if</span>(yin[<span class="number">1</span>])</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span>(!yin[<span class="number">0</span>])</div><div class="line">        <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span>(!cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+(<span class="number">2</span>*x);</div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">5</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">14</span>:<span class="number">6</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">14</span>]=cout;</div><div class="line">                pry[<span class="number">13</span>]=cout;</div><div class="line">                yout=pry[<span class="number">5</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">14</span>:<span class="number">6</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">            <span class="keyword">if</span>(cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+opx;</div><div class="line">                cout=<span class="number">1</span>;</div><div class="line">                pry[<span class="number">5</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">14</span>:<span class="number">6</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">14</span>]=cout;</div><div class="line">                pry[<span class="number">13</span>]=cout;</div><div class="line">                yout=pry[<span class="number">5</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">14</span>:<span class="number">6</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">        <span class="keyword">end</span></div><div class="line">        <span class="keyword">if</span>(yin[<span class="number">0</span>])</div><div class="line">        <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span>(!cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+opx;</div><div class="line">                cout=<span class="number">1</span>;</div><div class="line">                pry[<span class="number">5</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">14</span>:<span class="number">6</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">14</span>]=cout;</div><div class="line">                pry[<span class="number">13</span>]=cout;</div><div class="line">                yout=pry[<span class="number">5</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">14</span>:<span class="number">6</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">            <span class="keyword">if</span>(cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin;</div><div class="line">                cout=<span class="number">1</span>;</div><div class="line">                pry[<span class="number">5</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">14</span>:<span class="number">6</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">14</span>]=cout;</div><div class="line">                pry[<span class="number">13</span>]=cout;</div><div class="line">                yout=pry[<span class="number">5</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">14</span>:<span class="number">6</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">        <span class="keyword">end</span></div><div class="line">    <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure><h2 id="17位"><a href="#17位" class="headerlink" title="17位"></a>17位</h2><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">module</span> BFI17(<span class="keyword">output</span> [<span class="number">32</span>:<span class="number">0</span>]result,</div><div class="line">    <span class="keyword">inout</span> [<span class="number">16</span>:<span class="number">0</span>]x,</div><div class="line">    <span class="keyword">inout</span> [<span class="number">16</span>:<span class="number">0</span>]y,</div><div class="line">    <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">wire</span> [<span class="number">18</span>:<span class="number">0</span>]xtmp;</div><div class="line"><span class="keyword">assign</span> xtmp[<span class="number">16</span>:<span class="number">0</span>]=x;</div><div class="line"><span class="keyword">assign</span> xtmp[<span class="number">17</span>]=x[<span class="number">16</span>];</div><div class="line"><span class="keyword">assign</span> xtmp[<span class="number">18</span>]=x[<span class="number">16</span>];</div><div class="line"><span class="keyword">wire</span> [<span class="number">18</span>:<span class="number">0</span>]prtmp[<span class="number">8</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">wire</span> [<span class="number">15</span>:<span class="number">0</span>]ytmp[<span class="number">8</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">wire</span> ctmp[<span class="number">8</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">wire</span> [<span class="number">34</span>:<span class="number">0</span>]restmp;</div><div class="line"></div><div class="line"><span class="keyword">assign</span> x=<span class="number">17'b0_0010_0111_0010_0111</span>;</div><div class="line"><span class="keyword">assign</span> y=<span class="number">17'b0_0010_0111_0010_0111</span>;</div><div class="line"></div><div class="line"><span class="keyword">assign</span> prtmp[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line"><span class="keyword">assign</span> ytmp[<span class="number">0</span>]=y[<span class="number">15</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">assign</span> ctmp[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line"></div><div class="line"></div><div class="line">cho c1(prtmp[<span class="number">1</span>],ytmp[<span class="number">1</span>],ctmp[<span class="number">1</span>],ctmp[<span class="number">0</span>],prtmp[<span class="number">0</span>],xtmp,ytmp[<span class="number">0</span>],clk);</div><div class="line">cho c2(prtmp[<span class="number">2</span>],ytmp[<span class="number">2</span>],ctmp[<span class="number">2</span>],ctmp[<span class="number">1</span>],prtmp[<span class="number">1</span>],xtmp,ytmp[<span class="number">1</span>],clk);</div><div class="line">cho c3(prtmp[<span class="number">3</span>],ytmp[<span class="number">3</span>],ctmp[<span class="number">3</span>],ctmp[<span class="number">2</span>],prtmp[<span class="number">2</span>],xtmp,ytmp[<span class="number">2</span>],clk);</div><div class="line">cho c4(prtmp[<span class="number">4</span>],ytmp[<span class="number">4</span>],ctmp[<span class="number">4</span>],ctmp[<span class="number">3</span>],prtmp[<span class="number">3</span>],xtmp,ytmp[<span class="number">3</span>],clk);</div><div class="line">cho c5(prtmp[<span class="number">5</span>],ytmp[<span class="number">5</span>],ctmp[<span class="number">5</span>],ctmp[<span class="number">4</span>],prtmp[<span class="number">4</span>],xtmp,ytmp[<span class="number">4</span>],clk);</div><div class="line">cho c6(prtmp[<span class="number">6</span>],ytmp[<span class="number">6</span>],ctmp[<span class="number">6</span>],ctmp[<span class="number">5</span>],prtmp[<span class="number">5</span>],xtmp,ytmp[<span class="number">5</span>],clk);</div><div class="line">cho c7(prtmp[<span class="number">7</span>],ytmp[<span class="number">7</span>],ctmp[<span class="number">7</span>],ctmp[<span class="number">6</span>],prtmp[<span class="number">6</span>],xtmp,ytmp[<span class="number">6</span>],clk);</div><div class="line">cho c8(prtmp[<span class="number">8</span>],ytmp[<span class="number">8</span>],ctmp[<span class="number">8</span>],ctmp[<span class="number">7</span>],prtmp[<span class="number">7</span>],xtmp,ytmp[<span class="number">7</span>],clk);</div><div class="line"></div><div class="line">resch rc(result,ytmp[<span class="number">8</span>],prtmp[<span class="number">8</span>],ctmp[<span class="number">8</span>],clk);</div><div class="line"></div><div class="line"><span class="keyword">endmodule</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">module</span> resch(<span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">32</span>:<span class="number">0</span>]result,</div><div class="line">                <span class="keyword">input</span> [<span class="number">15</span>:<span class="number">0</span>]yt,</div><div class="line">                <span class="keyword">input</span> [<span class="number">18</span>:<span class="number">0</span>]prt,</div><div class="line">                <span class="keyword">input</span> ct,</div><div class="line">                <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">reg</span> [<span class="number">34</span>:<span class="number">0</span>]restmp;</div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">begin</span></div><div class="line">    restmp[<span class="number">15</span>:<span class="number">0</span>]=yt;</div><div class="line">    restmp[<span class="number">34</span>:<span class="number">16</span>]=prt;</div><div class="line">    result=restmp[<span class="number">32</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">module</span> cho(<span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">18</span>:<span class="number">0</span>]prout,</div><div class="line">            <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">15</span>:<span class="number">0</span>]yout,</div><div class="line">            <span class="keyword">output</span> <span class="keyword">reg</span> cout,</div><div class="line">            <span class="keyword">input</span> cin,</div><div class="line">            <span class="keyword">input</span> [<span class="number">18</span>:<span class="number">0</span>]prin,</div><div class="line">            <span class="keyword">input</span> [<span class="number">18</span>:<span class="number">0</span>]x,</div><div class="line">            <span class="keyword">input</span> [<span class="number">15</span>:<span class="number">0</span>]yin,</div><div class="line">            <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">reg</span> [<span class="number">18</span>:<span class="number">0</span>]prtmp;</div><div class="line"><span class="keyword">reg</span> [<span class="number">34</span>:<span class="number">0</span>]pry;</div><div class="line"><span class="keyword">reg</span> [<span class="number">18</span>:<span class="number">0</span>]opx;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">begin</span></div><div class="line">    opx[<span class="number">0</span>]=~x[<span class="number">0</span>];</div><div class="line">    opx[<span class="number">1</span>]=~x[<span class="number">1</span>];</div><div class="line">    opx[<span class="number">2</span>]=~x[<span class="number">2</span>];</div><div class="line">    opx[<span class="number">3</span>]=~x[<span class="number">3</span>];</div><div class="line">    opx[<span class="number">4</span>]=~x[<span class="number">4</span>];</div><div class="line">    opx[<span class="number">5</span>]=~x[<span class="number">5</span>];</div><div class="line">    opx[<span class="number">6</span>]=~x[<span class="number">6</span>];</div><div class="line">    opx[<span class="number">7</span>]=~x[<span class="number">7</span>];</div><div class="line">    opx[<span class="number">8</span>]=~x[<span class="number">8</span>];</div><div class="line">    opx[<span class="number">9</span>]=~x[<span class="number">9</span>];</div><div class="line">    opx[<span class="number">10</span>]=~x[<span class="number">10</span>];</div><div class="line">    opx[<span class="number">11</span>]=~x[<span class="number">11</span>];</div><div class="line">    opx[<span class="number">12</span>]=~x[<span class="number">12</span>];</div><div class="line">    opx[<span class="number">13</span>]=~x[<span class="number">13</span>];</div><div class="line">    opx[<span class="number">14</span>]=~x[<span class="number">14</span>];</div><div class="line">    opx[<span class="number">15</span>]=~x[<span class="number">15</span>];</div><div class="line">    opx=opx+<span class="number">16'b1</span>;</div><div class="line">    opx[<span class="number">16</span>]=~x[<span class="number">16</span>];</div><div class="line">    opx[<span class="number">17</span>]=~x[<span class="number">16</span>];</div><div class="line">    opx[<span class="number">18</span>]=~x[<span class="number">16</span>];</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(!yin[<span class="number">1</span>])</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span>(!yin[<span class="number">0</span>])</div><div class="line">        <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span>(!cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin; <span class="comment">//suanfa</span></div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">15</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">34</span>:<span class="number">16</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">34</span>]=cout;</div><div class="line">                pry[<span class="number">33</span>]=cout;</div><div class="line">                yout=pry[<span class="number">15</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">34</span>:<span class="number">16</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">            <span class="keyword">if</span>(cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+x;</div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">15</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">34</span>:<span class="number">16</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">34</span>]=cout;</div><div class="line">                pry[<span class="number">33</span>]=cout;</div><div class="line">                yout=pry[<span class="number">15</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">34</span>:<span class="number">16</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">        <span class="keyword">end</span></div><div class="line">        <span class="keyword">if</span>(yin[<span class="number">0</span>])</div><div class="line">        <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span>(!cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+x;</div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">15</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">34</span>:<span class="number">16</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">34</span>]=cout;</div><div class="line">                pry[<span class="number">33</span>]=cout;</div><div class="line">                yout=pry[<span class="number">15</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">34</span>:<span class="number">16</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">            <span class="keyword">if</span>(cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+(<span class="number">2</span>*x);</div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">15</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">34</span>:<span class="number">16</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">34</span>]=cout;</div><div class="line">                pry[<span class="number">33</span>]=cout;</div><div class="line">                yout=pry[<span class="number">15</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">34</span>:<span class="number">16</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">        <span class="keyword">end</span></div><div class="line">    <span class="keyword">end</span></div><div class="line">    <span class="keyword">if</span>(yin[<span class="number">1</span>])</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span>(!yin[<span class="number">0</span>])</div><div class="line">        <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span>(!cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+(<span class="number">2</span>*x);</div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">15</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">34</span>:<span class="number">16</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">34</span>]=cout;</div><div class="line">                pry[<span class="number">33</span>]=cout;</div><div class="line">                yout=pry[<span class="number">15</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">34</span>:<span class="number">16</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">            <span class="keyword">if</span>(cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+opx;</div><div class="line">                cout=<span class="number">1</span>;</div><div class="line">                pry[<span class="number">15</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">34</span>:<span class="number">16</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">34</span>]=cout;</div><div class="line">                pry[<span class="number">33</span>]=cout;</div><div class="line">                yout=pry[<span class="number">15</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">34</span>:<span class="number">16</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">        <span class="keyword">end</span></div><div class="line">        <span class="keyword">if</span>(yin[<span class="number">0</span>])</div><div class="line">        <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span>(!cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+opx;</div><div class="line">                cout=<span class="number">1</span>;</div><div class="line">                pry[<span class="number">15</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">34</span>:<span class="number">16</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">34</span>]=cout;</div><div class="line">                pry[<span class="number">33</span>]=cout;</div><div class="line">                yout=pry[<span class="number">15</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">34</span>:<span class="number">16</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">            <span class="keyword">if</span>(cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin;</div><div class="line">                cout=<span class="number">1</span>;</div><div class="line">                pry[<span class="number">15</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">34</span>:<span class="number">16</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">34</span>]=cout;</div><div class="line">                pry[<span class="number">33</span>]=cout;</div><div class="line">                yout=pry[<span class="number">15</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">34</span>:<span class="number">16</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">        <span class="keyword">end</span></div><div class="line">    <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure><h2 id="33位"><a href="#33位" class="headerlink" title="33位"></a>33位</h2><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">module</span> BFI33(<span class="keyword">output</span> [<span class="number">64</span>:<span class="number">0</span>]result,</div><div class="line">    <span class="keyword">inout</span> [<span class="number">32</span>:<span class="number">0</span>]x,</div><div class="line">    <span class="keyword">inout</span> [<span class="number">32</span>:<span class="number">0</span>]y,</div><div class="line">    <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">wire</span> [<span class="number">34</span>:<span class="number">0</span>]xtmp;</div><div class="line"><span class="keyword">assign</span> xtmp[<span class="number">32</span>:<span class="number">0</span>]=x;</div><div class="line"><span class="keyword">assign</span> xtmp[<span class="number">33</span>]=x[<span class="number">32</span>];</div><div class="line"><span class="keyword">assign</span> xtmp[<span class="number">34</span>]=x[<span class="number">32</span>];</div><div class="line"><span class="keyword">wire</span> [<span class="number">34</span>:<span class="number">0</span>]prtmp[<span class="number">16</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">wire</span> [<span class="number">31</span>:<span class="number">0</span>]ytmp[<span class="number">16</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">wire</span> ctmp[<span class="number">16</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">wire</span> [<span class="number">66</span>:<span class="number">0</span>]restmp;</div><div class="line"></div><div class="line"><span class="keyword">assign</span> x=<span class="number">33'b0_0010_0111_0010_0111_0010_0111_0010_0111</span>;</div><div class="line"><span class="keyword">assign</span> y=<span class="number">33'b0_0010_0111_0010_0111_0010_0111_0010_0111</span>;</div><div class="line"></div><div class="line"><span class="keyword">assign</span> prtmp[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line"><span class="keyword">assign</span> ytmp[<span class="number">0</span>]=y[<span class="number">31</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">assign</span> ctmp[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line"></div><div class="line"></div><div class="line">cho c1(prtmp[<span class="number">1</span>],ytmp[<span class="number">1</span>],ctmp[<span class="number">1</span>],ctmp[<span class="number">0</span>],prtmp[<span class="number">0</span>],xtmp,ytmp[<span class="number">0</span>],clk);</div><div class="line">cho c2(prtmp[<span class="number">2</span>],ytmp[<span class="number">2</span>],ctmp[<span class="number">2</span>],ctmp[<span class="number">1</span>],prtmp[<span class="number">1</span>],xtmp,ytmp[<span class="number">1</span>],clk);</div><div class="line">cho c3(prtmp[<span class="number">3</span>],ytmp[<span class="number">3</span>],ctmp[<span class="number">3</span>],ctmp[<span class="number">2</span>],prtmp[<span class="number">2</span>],xtmp,ytmp[<span class="number">2</span>],clk);</div><div class="line">cho c4(prtmp[<span class="number">4</span>],ytmp[<span class="number">4</span>],ctmp[<span class="number">4</span>],ctmp[<span class="number">3</span>],prtmp[<span class="number">3</span>],xtmp,ytmp[<span class="number">3</span>],clk);</div><div class="line">cho c5(prtmp[<span class="number">5</span>],ytmp[<span class="number">5</span>],ctmp[<span class="number">5</span>],ctmp[<span class="number">4</span>],prtmp[<span class="number">4</span>],xtmp,ytmp[<span class="number">4</span>],clk);</div><div class="line">cho c6(prtmp[<span class="number">6</span>],ytmp[<span class="number">6</span>],ctmp[<span class="number">6</span>],ctmp[<span class="number">5</span>],prtmp[<span class="number">5</span>],xtmp,ytmp[<span class="number">5</span>],clk);</div><div class="line">cho c7(prtmp[<span class="number">7</span>],ytmp[<span class="number">7</span>],ctmp[<span class="number">7</span>],ctmp[<span class="number">6</span>],prtmp[<span class="number">6</span>],xtmp,ytmp[<span class="number">6</span>],clk);</div><div class="line">cho c8(prtmp[<span class="number">8</span>],ytmp[<span class="number">8</span>],ctmp[<span class="number">8</span>],ctmp[<span class="number">7</span>],prtmp[<span class="number">7</span>],xtmp,ytmp[<span class="number">7</span>],clk);</div><div class="line">cho c9(prtmp[<span class="number">9</span>],ytmp[<span class="number">9</span>],ctmp[<span class="number">9</span>],ctmp[<span class="number">8</span>],prtmp[<span class="number">8</span>],xtmp,ytmp[<span class="number">8</span>],clk);</div><div class="line">cho c10(prtmp[<span class="number">10</span>],ytmp[<span class="number">10</span>],ctmp[<span class="number">10</span>],ctmp[<span class="number">9</span>],prtmp[<span class="number">9</span>],xtmp,ytmp[<span class="number">9</span>],clk);</div><div class="line">cho c11(prtmp[<span class="number">11</span>],ytmp[<span class="number">11</span>],ctmp[<span class="number">11</span>],ctmp[<span class="number">10</span>],prtmp[<span class="number">10</span>],xtmp,ytmp[<span class="number">10</span>],clk);</div><div class="line">cho c12(prtmp[<span class="number">12</span>],ytmp[<span class="number">12</span>],ctmp[<span class="number">12</span>],ctmp[<span class="number">11</span>],prtmp[<span class="number">11</span>],xtmp,ytmp[<span class="number">11</span>],clk);</div><div class="line">cho c13(prtmp[<span class="number">13</span>],ytmp[<span class="number">13</span>],ctmp[<span class="number">13</span>],ctmp[<span class="number">12</span>],prtmp[<span class="number">12</span>],xtmp,ytmp[<span class="number">12</span>],clk);</div><div class="line">cho c14(prtmp[<span class="number">14</span>],ytmp[<span class="number">14</span>],ctmp[<span class="number">14</span>],ctmp[<span class="number">13</span>],prtmp[<span class="number">13</span>],xtmp,ytmp[<span class="number">13</span>],clk);</div><div class="line">cho c15(prtmp[<span class="number">15</span>],ytmp[<span class="number">15</span>],ctmp[<span class="number">15</span>],ctmp[<span class="number">14</span>],prtmp[<span class="number">14</span>],xtmp,ytmp[<span class="number">14</span>],clk);</div><div class="line">cho c16(prtmp[<span class="number">16</span>],ytmp[<span class="number">16</span>],ctmp[<span class="number">16</span>],ctmp[<span class="number">15</span>],prtmp[<span class="number">15</span>],xtmp,ytmp[<span class="number">15</span>],clk);</div><div class="line"></div><div class="line">resch rc(result,ytmp[<span class="number">16</span>],prtmp[<span class="number">16</span>],ctmp[<span class="number">16</span>],clk);</div><div class="line"></div><div class="line"><span class="keyword">endmodule</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">module</span> resch(<span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">64</span>:<span class="number">0</span>]result,</div><div class="line">                <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>]yt,</div><div class="line">                <span class="keyword">input</span> [<span class="number">34</span>:<span class="number">0</span>]prt,</div><div class="line">                <span class="keyword">input</span> ct,</div><div class="line">                <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">reg</span> [<span class="number">66</span>:<span class="number">0</span>]restmp;</div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">begin</span></div><div class="line">    restmp[<span class="number">31</span>:<span class="number">0</span>]=yt;</div><div class="line">    restmp[<span class="number">66</span>:<span class="number">32</span>]=prt;</div><div class="line">    result=restmp[<span class="number">64</span>:<span class="number">0</span>];</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">module</span> cho(<span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">34</span>:<span class="number">0</span>]prout,</div><div class="line">            <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">31</span>:<span class="number">0</span>]yout,</div><div class="line">            <span class="keyword">output</span> <span class="keyword">reg</span> cout,</div><div class="line">            <span class="keyword">input</span> cin,</div><div class="line">            <span class="keyword">input</span> [<span class="number">34</span>:<span class="number">0</span>]prin,</div><div class="line">            <span class="keyword">input</span> [<span class="number">34</span>:<span class="number">0</span>]x,</div><div class="line">            <span class="keyword">input</span> [<span class="number">31</span>:<span class="number">0</span>]yin,</div><div class="line">            <span class="keyword">input</span> clk);</div><div class="line"></div><div class="line"><span class="keyword">reg</span> [<span class="number">34</span>:<span class="number">0</span>]prtmp;</div><div class="line"><span class="keyword">reg</span> [<span class="number">66</span>:<span class="number">0</span>]pry;</div><div class="line"><span class="keyword">reg</span> [<span class="number">34</span>:<span class="number">0</span>]opx;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk)</div><div class="line"><span class="keyword">begin</span></div><div class="line">    opx[<span class="number">0</span>]=~x[<span class="number">0</span>];</div><div class="line">    opx[<span class="number">1</span>]=~x[<span class="number">1</span>];</div><div class="line">    opx[<span class="number">2</span>]=~x[<span class="number">2</span>];</div><div class="line">    opx[<span class="number">3</span>]=~x[<span class="number">3</span>];</div><div class="line">    opx[<span class="number">4</span>]=~x[<span class="number">4</span>];</div><div class="line">    opx[<span class="number">5</span>]=~x[<span class="number">5</span>];</div><div class="line">    opx[<span class="number">6</span>]=~x[<span class="number">6</span>];</div><div class="line">    opx[<span class="number">7</span>]=~x[<span class="number">7</span>];</div><div class="line">    opx[<span class="number">8</span>]=~x[<span class="number">8</span>];</div><div class="line">    opx[<span class="number">9</span>]=~x[<span class="number">9</span>];</div><div class="line">    opx[<span class="number">10</span>]=~x[<span class="number">10</span>];</div><div class="line">    opx[<span class="number">11</span>]=~x[<span class="number">11</span>];</div><div class="line">    opx[<span class="number">12</span>]=~x[<span class="number">12</span>];</div><div class="line">    opx[<span class="number">13</span>]=~x[<span class="number">13</span>];</div><div class="line">    opx[<span class="number">14</span>]=~x[<span class="number">14</span>];</div><div class="line">    opx[<span class="number">15</span>]=~x[<span class="number">15</span>];</div><div class="line">    opx[<span class="number">16</span>]=~x[<span class="number">16</span>];</div><div class="line">    opx[<span class="number">17</span>]=~x[<span class="number">17</span>];</div><div class="line">    opx[<span class="number">18</span>]=~x[<span class="number">18</span>];</div><div class="line">    opx[<span class="number">19</span>]=~x[<span class="number">19</span>];</div><div class="line">    opx[<span class="number">20</span>]=~x[<span class="number">20</span>];</div><div class="line">    opx[<span class="number">21</span>]=~x[<span class="number">21</span>];</div><div class="line">    opx[<span class="number">22</span>]=~x[<span class="number">22</span>];</div><div class="line">    opx[<span class="number">23</span>]=~x[<span class="number">23</span>];</div><div class="line">    opx[<span class="number">24</span>]=~x[<span class="number">24</span>];</div><div class="line">    opx[<span class="number">25</span>]=~x[<span class="number">25</span>];</div><div class="line">    opx[<span class="number">26</span>]=~x[<span class="number">26</span>];</div><div class="line">    opx[<span class="number">27</span>]=~x[<span class="number">27</span>];</div><div class="line">    opx[<span class="number">28</span>]=~x[<span class="number">28</span>];</div><div class="line">    opx[<span class="number">29</span>]=~x[<span class="number">29</span>];</div><div class="line">    opx[<span class="number">30</span>]=~x[<span class="number">30</span>];</div><div class="line">    opx[<span class="number">31</span>]=~x[<span class="number">31</span>];</div><div class="line">    opx=opx+<span class="number">32'b1</span>;</div><div class="line">    opx[<span class="number">32</span>]=~x[<span class="number">32</span>];</div><div class="line">    opx[<span class="number">33</span>]=~x[<span class="number">32</span>];</div><div class="line">    opx[<span class="number">34</span>]=~x[<span class="number">32</span>];</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(!yin[<span class="number">1</span>])</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span>(!yin[<span class="number">0</span>])</div><div class="line">        <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span>(!cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin; <span class="comment">//suanfa</span></div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">31</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">66</span>:<span class="number">32</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">66</span>]=cout;</div><div class="line">                pry[<span class="number">65</span>]=cout;</div><div class="line">                yout=pry[<span class="number">31</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">66</span>:<span class="number">32</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">            <span class="keyword">if</span>(cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+x;</div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">31</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">66</span>:<span class="number">32</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">66</span>]=cout;</div><div class="line">                pry[<span class="number">65</span>]=cout;</div><div class="line">                yout=pry[<span class="number">31</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">66</span>:<span class="number">32</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">        <span class="keyword">end</span></div><div class="line">        <span class="keyword">if</span>(yin[<span class="number">0</span>])</div><div class="line">        <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span>(!cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+x;</div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">31</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">66</span>:<span class="number">32</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">66</span>]=cout;</div><div class="line">                pry[<span class="number">65</span>]=cout;</div><div class="line">                yout=pry[<span class="number">31</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">66</span>:<span class="number">32</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">            <span class="keyword">if</span>(cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+(<span class="number">2</span>*x);</div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">31</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">66</span>:<span class="number">32</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">66</span>]=cout;</div><div class="line">                pry[<span class="number">65</span>]=cout;</div><div class="line">                yout=pry[<span class="number">31</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">66</span>:<span class="number">32</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">        <span class="keyword">end</span></div><div class="line">    <span class="keyword">end</span></div><div class="line">    <span class="keyword">if</span>(yin[<span class="number">1</span>])</div><div class="line">    <span class="keyword">begin</span></div><div class="line">        <span class="keyword">if</span>(!yin[<span class="number">0</span>])</div><div class="line">        <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span>(!cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+(<span class="number">2</span>*x);</div><div class="line">                cout=<span class="number">0</span>;</div><div class="line">                pry[<span class="number">31</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">66</span>:<span class="number">32</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">66</span>]=cout;</div><div class="line">                pry[<span class="number">65</span>]=cout;</div><div class="line">                yout=pry[<span class="number">31</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">66</span>:<span class="number">32</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">            <span class="keyword">if</span>(cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+opx;</div><div class="line">                cout=<span class="number">1</span>;</div><div class="line">                pry[<span class="number">31</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">66</span>:<span class="number">32</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">66</span>]=cout;</div><div class="line">                pry[<span class="number">65</span>]=cout;</div><div class="line">                yout=pry[<span class="number">31</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">66</span>:<span class="number">32</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">        <span class="keyword">end</span></div><div class="line">        <span class="keyword">if</span>(yin[<span class="number">0</span>])</div><div class="line">        <span class="keyword">begin</span></div><div class="line">            <span class="keyword">if</span>(!cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin+opx;</div><div class="line">                cout=<span class="number">1</span>;</div><div class="line">                pry[<span class="number">31</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">66</span>:<span class="number">32</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">66</span>]=cout;</div><div class="line">                pry[<span class="number">65</span>]=cout;</div><div class="line">                yout=pry[<span class="number">31</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">66</span>:<span class="number">32</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">            <span class="keyword">if</span>(cin)</div><div class="line">            <span class="keyword">begin</span></div><div class="line">                prtmp=prin;</div><div class="line">                cout=<span class="number">1</span>;</div><div class="line">                pry[<span class="number">31</span>:<span class="number">0</span>]=yin;</div><div class="line">                pry[<span class="number">66</span>:<span class="number">32</span>]=prtmp;</div><div class="line">                pry=pry&gt;&gt;<span class="number">2</span>;</div><div class="line">                pry[<span class="number">66</span>]=cout;</div><div class="line">                pry[<span class="number">65</span>]=cout;</div><div class="line">                yout=pry[<span class="number">31</span>:<span class="number">0</span>];</div><div class="line">                prout=pry[<span class="number">66</span>:<span class="number">32</span>];</div><div class="line">            <span class="keyword">end</span></div><div class="line">        <span class="keyword">end</span></div><div class="line">    <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span></div></pre></td></tr></table></figure><h2 id="激励块"><a href="#激励块" class="headerlink" title="激励块"></a>激励块</h2><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//6(7)Bit</span></div><div class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns/1ps</span></div><div class="line"><span class="keyword">module</span> BFI_tb;</div><div class="line"><span class="keyword">reg</span> clk;</div><div class="line"><span class="keyword">wire</span> [<span class="number">6</span>:<span class="number">0</span>]x;</div><div class="line"><span class="keyword">wire</span> [<span class="number">6</span>:<span class="number">0</span>]y;</div><div class="line"><span class="keyword">wire</span> [<span class="number">12</span>:<span class="number">0</span>]result;</div><div class="line"></div><div class="line">BFI i1 (</div><div class="line">    <span class="variable">.clk</span>(clk),</div><div class="line">    <span class="variable">.result</span>(result),</div><div class="line">    <span class="variable">.x</span>(x),</div><div class="line">    <span class="variable">.y</span>(y)</div><div class="line">);</div><div class="line"></div><div class="line"><span class="keyword">always</span></div><div class="line">    #<span class="number">10</span> clk=~clk;</div><div class="line">    </div><div class="line"><span class="keyword">initial</span></div><div class="line"><span class="keyword">begin</span></div><div class="line">    clk=<span class="number">0</span>;</div><div class="line">    <span class="comment">//x=7'b0_10_0111;</span></div><div class="line">    <span class="comment">//y=7'b0_10_0111;</span></div><div class="line">    #<span class="number">200</span> <span class="built_in">$stop</span>;</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="keyword">endmodule</span></div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">//16(17)Bit</span></div><div class="line"><span class="comment">`timescale 1ns/1ps</span></div><div class="line"><span class="comment">module BFI_tb;</span></div><div class="line"><span class="comment">reg clk;</span></div><div class="line"><span class="comment">wire [16:0]x;</span></div><div class="line"><span class="comment">wire [16:0]y;</span></div><div class="line"><span class="comment">wire [32:0]result;</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">BFI i1 (</span></div><div class="line"><span class="comment">    .clk(clk),</span></div><div class="line"><span class="comment">    .result(result),</span></div><div class="line"><span class="comment">    .x(x),</span></div><div class="line"><span class="comment">    .y(y)</span></div><div class="line"><span class="comment">);</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">always</span></div><div class="line"><span class="comment">    #10 clk=~clk;</span></div><div class="line"><span class="comment">    </span></div><div class="line"><span class="comment">initial</span></div><div class="line"><span class="comment">begin</span></div><div class="line"><span class="comment">    clk=0;</span></div><div class="line"><span class="comment">    //x=7'b0_10_0111;</span></div><div class="line"><span class="comment">    //y=7'b0_10_0111;</span></div><div class="line"><span class="comment">    #200 $stop;</span></div><div class="line"><span class="comment">end</span></div><div class="line"><span class="comment">endmodule</span></div><div class="line"><span class="comment">//*/</span></div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">//32(33)Bit</span></div><div class="line"><span class="comment">`timescale 1ns/1ps</span></div><div class="line"><span class="comment">module BFI_tb;</span></div><div class="line"><span class="comment">reg clk;</span></div><div class="line"><span class="comment">wire [32:0]x;</span></div><div class="line"><span class="comment">wire [32:0]y;</span></div><div class="line"><span class="comment">wire [64:0]result;</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">BFI i1 (</span></div><div class="line"><span class="comment">    .clk(clk),</span></div><div class="line"><span class="comment">    .result(result),</span></div><div class="line"><span class="comment">    .x(x),</span></div><div class="line"><span class="comment">    .y(y)</span></div><div class="line"><span class="comment">);</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">always</span></div><div class="line"><span class="comment">    #10 clk=~clk;</span></div><div class="line"><span class="comment">    </span></div><div class="line"><span class="comment">initial</span></div><div class="line"><span class="comment">begin</span></div><div class="line"><span class="comment">    clk=0;</span></div><div class="line"><span class="comment">    //x=7'b0_10_0111;</span></div><div class="line"><span class="comment">    //y=7'b0_10_0111;</span></div><div class="line"><span class="comment">    #2000 $stop;</span></div><div class="line"><span class="comment">end</span></div><div class="line"><span class="comment">endmodule</span></div><div class="line"><span class="comment">//*/</span></div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment">//Test</span></div><div class="line"><span class="comment">`timescale 1ns/1ps</span></div><div class="line"><span class="comment">module BFI_tb;</span></div><div class="line"><span class="comment">reg clk;</span></div><div class="line"><span class="comment">reg [8:0]x;</span></div><div class="line"><span class="comment">reg cin;</span></div><div class="line"><span class="comment">reg [8:0]prin;</span></div><div class="line"><span class="comment">wire [8:0]prout;</span></div><div class="line"><span class="comment">wire [5:0]yout;</span></div><div class="line"><span class="comment">wire cout;</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">reg [5:0]yin;</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">cho i2(prout,yout, cout,cin,prin,x,yin,clk);</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">always</span></div><div class="line"><span class="comment">    #10 clk=~clk;</span></div><div class="line"><span class="comment">    </span></div><div class="line"><span class="comment">initial</span></div><div class="line"><span class="comment">begin</span></div><div class="line"><span class="comment">    clk=0;</span></div><div class="line"><span class="comment">    prin=0;</span></div><div class="line"><span class="comment">    x=9'b000_10_0111;</span></div><div class="line"><span class="comment">    yin=6'b10_0111;</span></div><div class="line"><span class="comment">    cin=0;</span></div><div class="line"><span class="comment">    #40 $stop;</span></div><div class="line"><span class="comment">end</span></div><div class="line"><span class="comment">endmodule</span></div><div class="line"><span class="comment">//*/</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      原码二位乘法器的FPGA实现
    
    </summary>
    
    
    
      <category term="FPGA" scheme="https://mengze.top/tags/FPGA/"/>
    
  </entry>
  
</feed>
